{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { ROUTES } from '@/utils/routes';\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport function middleware(req: NextRequest) {\r\n  const token = req.cookies.get('access_token')?.value;\r\n\r\n  const isAuthRoute = req.nextUrl.pathname.startsWith('/login') || req.nextUrl.pathname.startsWith('/waitlist');\r\n\r\n  if (!token) {\r\n    if (!isAuthRoute) {\r\n      return NextResponse.redirect(new URL('/login', req.url));\r\n    }\r\n  } else {\r\n    if (req.nextUrl.pathname === '/' || isAuthRoute) {\r\n      return NextResponse.redirect(new URL(ROUTES.planner.event, req.url));\r\n    }\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: ['/((?!api|_next|static|imgs|favicon.ico).*)'], // Apply to all routes except Next.js internal files\r\n};"],"names":[],"mappings":";;;;;;;;;AACA;AAAA;;;AAEO,SAAS,WAAW,GAAgB;IACzC,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB;IAE/C,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAEjG,IAAI,CAAC,OAAO;QACV,IAAI,CAAC,aAAa;YAChB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;QACxD;IACF,OAAO;QACL,IAAI,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,aAAa;YAC/C,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,OAAO,CAAC,KAAK,EAAE,IAAI,GAAG;QACpE;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAA6C;AACzD"}}]
}