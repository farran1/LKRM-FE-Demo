{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/login/style.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"background\": \"style-module-scss-module__PTl8Ta__background\",\n  \"container\": \"style-module-scss-module__PTl8Ta__container\",\n  \"des\": \"style-module-scss-module__PTl8Ta__des\",\n  \"divider\": \"style-module-scss-module__PTl8Ta__divider\",\n  \"divider_text\": \"style-module-scss-module__PTl8Ta__divider_text\",\n  \"forgot_password\": \"style-module-scss-module__PTl8Ta__forgot_password\",\n  \"form\": \"style-module-scss-module__PTl8Ta__form\",\n  \"form_wrapper\": \"style-module-scss-module__PTl8Ta__form_wrapper\",\n  \"logo\": \"style-module-scss-module__PTl8Ta__logo\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/app/login/login.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Form, Input, Button, Card, ConfigProvider, Row, Checkbox, Flex, App } from 'antd'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useAuthStore } from '@/store/auth'\r\nimport style from './style.module.scss'\r\nimport Link from 'next/link'\r\nimport Logo from '@/components/icon/logo.svg'\r\nimport api from '@/services/api'\r\nimport useAppStore from '@/store/app'\r\nimport { ROUTES } from '@/utils/routes'\r\n\r\nconst Login = () => {\r\n  const router = useRouter()\r\n  const {login} = useAuthStore()\r\n  const { message } = App.useApp()\r\n  const {loading, setLoading} = useAppStore()\r\n\r\n  const onSubmit = async (payload: any) => {\r\n    setLoading(true)\r\n    try {\r\n      const res = await api.post('/api/login', payload)\r\n      login(res.data.token)\r\n      router.push(ROUTES.planner.event)\r\n    } catch (error) {\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const validateMessages = {\r\n    required: '${label} is required!'\r\n  }\r\n\r\n  const goWaitlist = () => {\r\n    router.push('/waitlist')\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.background}>\r\n        <img src=\"/imgs/login_bg.jpg\" alt=\"login_bg.jpg\" loading=\"lazy\" />\r\n      </div>\r\n      <div className={style.form_wrapper}>\r\n        <div className={style.form}>\r\n          <div className={style.logo}>\r\n            <Logo />\r\n            <div className={style.des}>Login into your account</div>\r\n          </div>\r\n          <ConfigProvider form={{ validateMessages }}>\r\n            <Form onFinish={onSubmit} layout=\"vertical\">\r\n              <Form.Item name=\"email\" rules={[{ required: true }]} label=\"Email\">\r\n                <Input type=\"email\" placeholder=\"Enter email\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"password\" rules={[{ required: true }]} label=\"Password\">\r\n                <Input type=\"password\" placeholder=\"Enter password\" />\r\n              </Form.Item>\r\n\r\n              <div>\r\n                <Link href=\"/forgot-password\" className={style.forgot_password}>Forgot password?</Link>\r\n                <Button block type=\"primary\" htmlType=\"submit\" style={{ marginBottom: 10 }} loading={loading}>\r\n                  Login\r\n                </Button>\r\n                <Button block type=\"primary\">\r\n                  Login via One Time Password\r\n                </Button>\r\n                <div className={style.divider}><span className={style.divider_text}>OR</span></div>\r\n                <Button block onClick={goWaitlist}>\r\n                  Join the waitlist\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;AAIA;AAVA;;;;;;;;;;;AAYA,MAAM,QAAQ;IACZ,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAC,KAAK,EAAC,GAAG;IAChB,MAAM,EAAE,OAAO,EAAE,GAAG,4KAAA,CAAA,MAAG,CAAC,MAAM;IAC9B,MAAM,EAAC,OAAO,EAAE,UAAU,EAAC,GAAG;IAE9B,MAAM,WAAW,OAAO;QACtB,WAAW;QACX,IAAI;YACF,MAAM,MAAM,MAAM,IAAI,IAAI,CAAC,cAAc;YACzC,MAAM,IAAI,IAAI,CAAC,KAAK;YACpB,OAAO,IAAI,CAAC,sHAAA,CAAA,SAAM,CAAC,OAAO,CAAC,KAAK;QAClC,EAAE,OAAO,OAAO,CAChB;QACA,WAAW;IACb;IAEA,MAAM,mBAAmB;QACvB,UAAU;IACZ;IAEA,MAAM,aAAa;QACjB,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC;QAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,SAAS;;0BAC7B,8OAAC;gBAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,UAAU;0BAC9B,cAAA,8OAAC;oBAAI,KAAI;oBAAqB,KAAI;oBAAe,SAAQ;;;;;;;;;;;0BAE3D,8OAAC;gBAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,YAAY;0BAChC,cAAA,8OAAC;oBAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,IAAI;;sCACxB,8OAAC;4BAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,IAAI;;8CACxB,8OAAC;;;;;8CACD,8OAAC;oCAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,GAAG;8CAAE;;;;;;;;;;;;sCAE7B,8OAAC,sNAAA,CAAA,iBAAc;4BAAC,MAAM;gCAAE;4BAAiB;sCACvC,cAAA,8OAAC,8KAAA,CAAA,OAAI;gCAAC,UAAU;gCAAU,QAAO;;kDAC/B,8OAAC,8KAAA,CAAA,OAAI,CAAC,IAAI;wCAAC,MAAK;wCAAQ,OAAO;4CAAC;gDAAE,UAAU;4CAAK;yCAAE;wCAAE,OAAM;kDACzD,cAAA,8OAAC,gLAAA,CAAA,QAAK;4CAAC,MAAK;4CAAQ,aAAY;;;;;;;;;;;kDAElC,8OAAC,8KAAA,CAAA,OAAI,CAAC,IAAI;wCAAC,MAAK;wCAAW,OAAO;4CAAC;gDAAE,UAAU;4CAAK;yCAAE;wCAAE,OAAM;kDAC5D,cAAA,8OAAC,gLAAA,CAAA,QAAK;4CAAC,MAAK;4CAAW,aAAY;;;;;;;;;;;kDAGrC,8OAAC;;0DACC,8OAAC,4JAAA,CAAA,UAAI;gDAAC,MAAK;gDAAmB,WAAW,mJAAA,CAAA,UAAK,CAAC,eAAe;0DAAE;;;;;;0DAChE,8OAAC,kMAAA,CAAA,SAAM;gDAAC,KAAK;gDAAC,MAAK;gDAAU,UAAS;gDAAS,OAAO;oDAAE,cAAc;gDAAG;gDAAG,SAAS;0DAAS;;;;;;0DAG9F,8OAAC,kMAAA,CAAA,SAAM;gDAAC,KAAK;gDAAC,MAAK;0DAAU;;;;;;0DAG7B,8OAAC;gDAAI,WAAW,mJAAA,CAAA,UAAK,CAAC,OAAO;0DAAE,cAAA,8OAAC;oDAAK,WAAW,mJAAA,CAAA,UAAK,CAAC,YAAY;8DAAE;;;;;;;;;;;0DACpE,8OAAC,kMAAA,CAAA,SAAM;gDAAC,KAAK;gDAAC,SAAS;0DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUnD;uCAEe","debugId":null}}]
}