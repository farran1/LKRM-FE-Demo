{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/(auth)/statistics/style.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actionButtons\": \"style-module-scss-module__dXTO5q__actionButtons\",\n  \"advancedHeader\": \"style-module-scss-module__dXTO5q__advancedHeader\",\n  \"advancedIcon\": \"style-module-scss-module__dXTO5q__advancedIcon\",\n  \"advancedSettings\": \"style-module-scss-module__dXTO5q__advancedSettings\",\n  \"advancedTitle\": \"style-module-scss-module__dXTO5q__advancedTitle\",\n  \"analyticsTable\": \"style-module-scss-module__dXTO5q__analyticsTable\",\n  \"ant-badge\": \"style-module-scss-module__dXTO5q__ant-badge\",\n  \"ant-badge-count\": \"style-module-scss-module__dXTO5q__ant-badge-count\",\n  \"ant-btn\": \"style-module-scss-module__dXTO5q__ant-btn\",\n  \"ant-btn-dangerous\": \"style-module-scss-module__dXTO5q__ant-btn-dangerous\",\n  \"ant-btn-dashed\": \"style-module-scss-module__dXTO5q__ant-btn-dashed\",\n  \"ant-btn-default\": \"style-module-scss-module__dXTO5q__ant-btn-default\",\n  \"ant-btn-primary\": \"style-module-scss-module__dXTO5q__ant-btn-primary\",\n  \"ant-card\": \"style-module-scss-module__dXTO5q__ant-card\",\n  \"ant-card-body\": \"style-module-scss-module__dXTO5q__ant-card-body\",\n  \"ant-card-head\": \"style-module-scss-module__dXTO5q__ant-card-head\",\n  \"ant-card-head-title\": \"style-module-scss-module__dXTO5q__ant-card-head-title\",\n  \"ant-col\": \"style-module-scss-module__dXTO5q__ant-col\",\n  \"ant-input\": \"style-module-scss-module__dXTO5q__ant-input\",\n  \"ant-modal\": \"style-module-scss-module__dXTO5q__ant-modal\",\n  \"ant-modal-body\": \"style-module-scss-module__dXTO5q__ant-modal-body\",\n  \"ant-modal-content\": \"style-module-scss-module__dXTO5q__ant-modal-content\",\n  \"ant-modal-footer\": \"style-module-scss-module__dXTO5q__ant-modal-footer\",\n  \"ant-modal-header\": \"style-module-scss-module__dXTO5q__ant-modal-header\",\n  \"ant-modal-title\": \"style-module-scss-module__dXTO5q__ant-modal-title\",\n  \"ant-row\": \"style-module-scss-module__dXTO5q__ant-row\",\n  \"ant-select\": \"style-module-scss-module__dXTO5q__ant-select\",\n  \"ant-select-arrow\": \"style-module-scss-module__dXTO5q__ant-select-arrow\",\n  \"ant-select-selector\": \"style-module-scss-module__dXTO5q__ant-select-selector\",\n  \"ant-statistic\": \"style-module-scss-module__dXTO5q__ant-statistic\",\n  \"ant-statistic-content\": \"style-module-scss-module__dXTO5q__ant-statistic-content\",\n  \"ant-statistic-title\": \"style-module-scss-module__dXTO5q__ant-statistic-title\",\n  \"ant-switch\": \"style-module-scss-module__dXTO5q__ant-switch\",\n  \"ant-switch-checked\": \"style-module-scss-module__dXTO5q__ant-switch-checked\",\n  \"ant-table\": \"style-module-scss-module__dXTO5q__ant-table\",\n  \"ant-table-tbody\": \"style-module-scss-module__dXTO5q__ant-table-tbody\",\n  \"ant-table-thead\": \"style-module-scss-module__dXTO5q__ant-table-thead\",\n  \"ant-tabs\": \"style-module-scss-module__dXTO5q__ant-tabs\",\n  \"ant-tabs-content-holder\": \"style-module-scss-module__dXTO5q__ant-tabs-content-holder\",\n  \"ant-tabs-nav\": \"style-module-scss-module__dXTO5q__ant-tabs-nav\",\n  \"ant-tabs-tab\": \"style-module-scss-module__dXTO5q__ant-tabs-tab\",\n  \"ant-tabs-tab-active\": \"style-module-scss-module__dXTO5q__ant-tabs-tab-active\",\n  \"ant-typography\": \"style-module-scss-module__dXTO5q__ant-typography\",\n  \"ant-typography-h1\": \"style-module-scss-module__dXTO5q__ant-typography-h1\",\n  \"ant-typography-h2\": \"style-module-scss-module__dXTO5q__ant-typography-h2\",\n  \"ant-typography-h3\": \"style-module-scss-module__dXTO5q__ant-typography-h3\",\n  \"ant-typography-secondary\": \"style-module-scss-module__dXTO5q__ant-typography-secondary\",\n  \"arrow\": \"style-module-scss-module__dXTO5q__arrow\",\n  \"availablePlayer\": \"style-module-scss-module__dXTO5q__availablePlayer\",\n  \"categoryDescription\": \"style-module-scss-module__dXTO5q__categoryDescription\",\n  \"categoryHeader\": \"style-module-scss-module__dXTO5q__categoryHeader\",\n  \"categoryIcon\": \"style-module-scss-module__dXTO5q__categoryIcon\",\n  \"categoryTitle\": \"style-module-scss-module__dXTO5q__categoryTitle\",\n  \"centerContent\": \"style-module-scss-module__dXTO5q__centerContent\",\n  \"clockDisplay\": \"style-module-scss-module__dXTO5q__clockDisplay\",\n  \"compactMode\": \"style-module-scss-module__dXTO5q__compactMode\",\n  \"container\": \"style-module-scss-module__dXTO5q__container\",\n  \"courtLayout\": \"style-module-scss-module__dXTO5q__courtLayout\",\n  \"courtPlayer\": \"style-module-scss-module__dXTO5q__courtPlayer\",\n  \"courtPosition\": \"style-module-scss-module__dXTO5q__courtPosition\",\n  \"courtVisualization\": \"style-module-scss-module__dXTO5q__courtVisualization\",\n  \"darkMode\": \"style-module-scss-module__dXTO5q__darkMode\",\n  \"effectivenessIndicator\": \"style-module-scss-module__dXTO5q__effectivenessIndicator\",\n  \"efficiencyIndicator\": \"style-module-scss-module__dXTO5q__efficiencyIndicator\",\n  \"empty\": \"style-module-scss-module__dXTO5q__empty\",\n  \"eventItem\": \"style-module-scss-module__dXTO5q__eventItem\",\n  \"eventPlayer\": \"style-module-scss-module__dXTO5q__eventPlayer\",\n  \"eventTime\": \"style-module-scss-module__dXTO5q__eventTime\",\n  \"eventType\": \"style-module-scss-module__dXTO5q__eventType\",\n  \"eventValue\": \"style-module-scss-module__dXTO5q__eventValue\",\n  \"eventsFeed\": \"style-module-scss-module__dXTO5q__eventsFeed\",\n  \"excellent\": \"style-module-scss-module__dXTO5q__excellent\",\n  \"exportButton\": \"style-module-scss-module__dXTO5q__exportButton\",\n  \"exportModal\": \"style-module-scss-module__dXTO5q__exportModal\",\n  \"foulTrouble\": \"style-module-scss-module__dXTO5q__foulTrouble\",\n  \"gameClock\": \"style-module-scss-module__dXTO5q__gameClock\",\n  \"gameControlBar\": \"style-module-scss-module__dXTO5q__gameControlBar\",\n  \"good\": \"style-module-scss-module__dXTO5q__good\",\n  \"halftimeReport\": \"style-module-scss-module__dXTO5q__halftimeReport\",\n  \"historyItem\": \"style-module-scss-module__dXTO5q__historyItem\",\n  \"insightCard\": \"style-module-scss-module__dXTO5q__insightCard\",\n  \"lineupBuilderModal\": \"style-module-scss-module__dXTO5q__lineupBuilderModal\",\n  \"lineupCard\": \"style-module-scss-module__dXTO5q__lineupCard\",\n  \"lineupHeader\": \"style-module-scss-module__dXTO5q__lineupHeader\",\n  \"lineupHistory\": \"style-module-scss-module__dXTO5q__lineupHistory\",\n  \"lineupPlayers\": \"style-module-scss-module__dXTO5q__lineupPlayers\",\n  \"lineupStats\": \"style-module-scss-module__dXTO5q__lineupStats\",\n  \"momentumIndicator\": \"style-module-scss-module__dXTO5q__momentumIndicator\",\n  \"negativeMomentum\": \"style-module-scss-module__dXTO5q__negativeMomentum\",\n  \"occupied\": \"style-module-scss-module__dXTO5q__occupied\",\n  \"opponentBadge\": \"style-module-scss-module__dXTO5q__opponentBadge\",\n  \"playerCard\": \"style-module-scss-module__dXTO5q__playerCard\",\n  \"playerGrid\": \"style-module-scss-module__dXTO5q__playerGrid\",\n  \"playerIn\": \"style-module-scss-module__dXTO5q__playerIn\",\n  \"playerInfo\": \"style-module-scss-module__dXTO5q__playerInfo\",\n  \"playerName\": \"style-module-scss-module__dXTO5q__playerName\",\n  \"playerNumber\": \"style-module-scss-module__dXTO5q__playerNumber\",\n  \"playerOut\": \"style-module-scss-module__dXTO5q__playerOut\",\n  \"playerSelection\": \"style-module-scss-module__dXTO5q__playerSelection\",\n  \"playerStats\": \"style-module-scss-module__dXTO5q__playerStats\",\n  \"poor\": \"style-module-scss-module__dXTO5q__poor\",\n  \"position\": \"style-module-scss-module__dXTO5q__position\",\n  \"positiveMomentum\": \"style-module-scss-module__dXTO5q__positiveMomentum\",\n  \"quarterInfo\": \"style-module-scss-module__dXTO5q__quarterInfo\",\n  \"quickStatButton\": \"style-module-scss-module__dXTO5q__quickStatButton\",\n  \"quickStats\": \"style-module-scss-module__dXTO5q__quickStats\",\n  \"quickSubButton\": \"style-module-scss-module__dXTO5q__quickSubButton\",\n  \"recommendations\": \"style-module-scss-module__dXTO5q__recommendations\",\n  \"score\": \"style-module-scss-module__dXTO5q__score\",\n  \"score-value\": \"style-module-scss-module__dXTO5q__score-value\",\n  \"scoreBoard\": \"style-module-scss-module__dXTO5q__scoreBoard\",\n  \"scoreboardInner\": \"style-module-scss-module__dXTO5q__scoreboardInner\",\n  \"scoreboardRightGrid\": \"style-module-scss-module__dXTO5q__scoreboardRightGrid\",\n  \"selectablePlayer\": \"style-module-scss-module__dXTO5q__selectablePlayer\",\n  \"selected\": \"style-module-scss-module__dXTO5q__selected\",\n  \"selectionCounter\": \"style-module-scss-module__dXTO5q__selectionCounter\",\n  \"settingDescription\": \"style-module-scss-module__dXTO5q__settingDescription\",\n  \"settingGroup\": \"style-module-scss-module__dXTO5q__settingGroup\",\n  \"settingsActions\": \"style-module-scss-module__dXTO5q__settingsActions\",\n  \"settingsCategory\": \"style-module-scss-module__dXTO5q__settingsCategory\",\n  \"settingsInfo\": \"style-module-scss-module__dXTO5q__settingsInfo\",\n  \"settingsModal\": \"style-module-scss-module__dXTO5q__settingsModal\",\n  \"shootingStats\": \"style-module-scss-module__dXTO5q__shootingStats\",\n  \"statBadge\": \"style-module-scss-module__dXTO5q__statBadge\",\n  \"statCard\": \"style-module-scss-module__dXTO5q__statCard\",\n  \"statLabel\": \"style-module-scss-module__dXTO5q__statLabel\",\n  \"statLine\": \"style-module-scss-module__dXTO5q__statLine\",\n  \"statTitle\": \"style-module-scss-module__dXTO5q__statTitle\",\n  \"statValue\": \"style-module-scss-module__dXTO5q__statValue\",\n  \"substitutionCard\": \"style-module-scss-module__dXTO5q__substitutionCard\",\n  \"substitutionFlow\": \"style-module-scss-module__dXTO5q__substitutionFlow\",\n  \"substitutionHistory\": \"style-module-scss-module__dXTO5q__substitutionHistory\",\n  \"substitutionInfo\": \"style-module-scss-module__dXTO5q__substitutionInfo\",\n  \"substitutionInterface\": \"style-module-scss-module__dXTO5q__substitutionInterface\",\n  \"substitutionStats\": \"style-module-scss-module__dXTO5q__substitutionStats\",\n  \"substitutionTime\": \"style-module-scss-module__dXTO5q__substitutionTime\",\n  \"teamName\": \"style-module-scss-module__dXTO5q__teamName\",\n  \"timeoutReport\": \"style-module-scss-module__dXTO5q__timeoutReport\",\n  \"topPerformer\": \"style-module-scss-module__dXTO5q__topPerformer\",\n  \"undoButton\": \"style-module-scss-module__dXTO5q__undoButton\",\n});\n"],"names":[],"mappings}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/app/%28auth%29/statistics/statistics.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { Card, Row, Col, Button, Typography, Space, Divider, Badge, Progress, Statistic, Modal, Table, Tabs, Select, Input, Tooltip, Alert, Switch } from 'antd'\nimport { PlayCircleOutlined, PauseCircleOutlined, StopOutlined, ClockCircleOutlined, BarChartOutlined, ExportOutlined, DownloadOutlined, SettingOutlined, TeamOutlined, TrophyOutlined } from '@ant-design/icons'\nimport style from './style.module.scss'\n\nconst { Title, Text } = Typography\nconst { TabPane } = Tabs\nconst { Option } = Select\n\ninterface GameState {\n  isPlaying: boolean\n  currentTime: number // seconds\n  quarter: number\n  homeScore: number\n  awayScore: number\n  opponentScore: number\n  timeoutHome: number\n  timeoutAway: number\n}\n\ninterface Player {\n  id: number\n  name: string\n  number: string\n  position: string\n  minutesPlayed: number\n  points: number\n  rebounds: number\n  offensiveRebounds: number\n  defensiveRebounds: number\n  assists: number\n  steals: number\n  blocks: number\n  fouls: number\n  turnovers: number\n  fgAttempted: number\n  fgMade: number\n  threeAttempted: number\n  threeMade: number\n  ftAttempted: number\n  ftMade: number\n  plusMinus: number\n  chargesTaken: number\n  deflections: number\n  isOnCourt: boolean\n}\n\ninterface StatEvent {\n  id: string\n  timestamp: number\n  playerId: number\n  playerName: string\n  eventType: string\n  value?: number\n  quarter: number\n  gameTime: number\n  opponentEvent?: boolean\n}\n\ninterface Lineup {\n  id: string\n  players: number[]\n  startTime: number\n  endTime?: number\n  plusMinus: number\n}\n\n// DEV-ONLY: Settings interface for comprehensive configuration\ninterface GameSettings {\n  // Game Configuration\n  quarterDuration: number // minutes\n  totalQuarters: number\n  timeoutCount: number\n  shotClock: number // seconds\n  \n  // Workflow Settings\n  workflowMode: 'player-first' | 'action-first'\n  autoPauseOnTimeout: boolean\n  autoPauseOnQuarterEnd: boolean\n  showConfirmations: boolean\n  \n  // Display Settings\n  showPlayerNumbers: boolean\n  showPositions: boolean\n  showEfficiencyRatings: boolean\n  compactMode: boolean\n  darkMode: boolean\n  \n  // Export Settings\n  autoExport: boolean\n  exportFormat: 'json' | 'csv' | 'pdf'\n  exportInterval: number // minutes\n  includePlayerStats: boolean\n  includeTeamStats: boolean\n  includeLineupData: boolean\n  \n  // Analytics Settings\n  showAdvancedStats: boolean\n  showProjections: boolean\n  showTrends: boolean\n  highlightTopPerformers: boolean\n  \n  // Notification Settings\n  halftimeReminder: boolean\n  timeoutReminder: boolean\n  foulTroubleAlert: boolean\n  efficiencyThreshold: number\n  \n  // Recommendation Settings\n  showRecommendations: boolean\n  showQuickActions: boolean\n}\n\nconst Statistics = () => {\n  // DEV-ONLY: Default settings with comprehensive options\n  const defaultSettings: GameSettings = {\n    quarterDuration: 10,\n    totalQuarters: 4,\n    timeoutCount: 4,\n    shotClock: 30,\n    workflowMode: 'player-first',\n    autoPauseOnTimeout: true,\n    autoPauseOnQuarterEnd: true,\n    showConfirmations: true,\n    showPlayerNumbers: true,\n    showPositions: true,\n    showEfficiencyRatings: true,\n    compactMode: false,\n    darkMode: false,\n    autoExport: false,\n    exportFormat: 'json',\n    exportInterval: 5,\n    includePlayerStats: true,\n    includeTeamStats: true,\n    includeLineupData: true,\n    showAdvancedStats: true,\n    showProjections: true,\n    showTrends: true,\n    highlightTopPerformers: true,\n    halftimeReminder: true,\n    timeoutReminder: true,\n    foulTroubleAlert: true,\n    efficiencyThreshold: 15,\n    showRecommendations: true,\n    showQuickActions: true\n  }\n\n  // Hydration-safe: always use defaultSettings for SSR, update from localStorage on client\n  const [settings, setSettings] = useState<GameSettings>(defaultSettings)\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const savedSettings = localStorage.getItem('basketballStatsSettings')\n      if (savedSettings) {\n        try {\n          setSettings({ ...defaultSettings, ...JSON.parse(savedSettings) })\n        } catch (error) {\n          console.warn('Failed to load settings from localStorage:', error)\n        }\n      }\n    }\n  }, [])\n\n  const [gameState, setGameState] = useState<GameState>(() => ({\n    isPlaying: false,\n    currentTime: defaultSettings.quarterDuration * 60, // Use default settings for initial state\n    quarter: 1,\n    homeScore: 0,\n    awayScore: 0,\n    opponentScore: 0,\n    timeoutHome: defaultSettings.timeoutCount,\n    timeoutAway: defaultSettings.timeoutCount\n  }))\n\n  const [players, setPlayers] = useState<Player[]>([\n    { id: 1, name: 'John Smith', number: '10', position: 'PG', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 2, name: 'Mike Johnson', number: '15', position: 'SG', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 3, name: 'David Wilson', number: '23', position: 'SF', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 4, name: 'Chris Brown', number: '32', position: 'PF', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 5, name: 'Alex Davis', number: '44', position: 'C', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 6, name: 'Ryan Martinez', number: '3', position: 'PG', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 7, name: 'Kevin Thompson', number: '7', position: 'SG', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 8, name: 'Marcus Williams', number: '12', position: 'SF', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 9, name: 'Jordan Lee', number: '21', position: 'PF', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 10, name: 'Tyler Anderson', number: '33', position: 'C', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 11, name: 'Brandon Garcia', number: '5', position: 'PG', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 12, name: 'Isaiah Rodriguez', number: '8', position: 'SG', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 13, name: 'Cameron White', number: '14', position: 'SF', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 14, name: 'Devin Taylor', number: '25', position: 'PF', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n    { id: 15, name: 'Nathan Clark', number: '55', position: 'C', minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, chargesTaken: 0, deflections: 0, isOnCourt: false },\n  ])\n\n  const [events, setEvents] = useState<StatEvent[]>([])\n  const [lineups, setLineups] = useState<Lineup[]>([])\n  const [showHalftimeReport, setShowHalftimeReport] = useState(false)\n  const [showTimeoutReport, setShowTimeoutReport] = useState(false)\n  const [selectedPlayer, setSelectedPlayer] = useState<Player | null>(null)\n  const [selectedAction, setSelectedAction] = useState<string | null>(null)\n  const [showExportModal, setShowExportModal] = useState(false)\n  const [showSettingsModal, setShowSettingsModal] = useState(false)\n  const [activeTab, setActiveTab] = useState('tracking')\n  const [workflowMode, setWorkflowMode] = useState<'player-first' | 'action-first'>(defaultSettings.workflowMode)\n  const [lastTimeoutTime, setLastTimeoutTime] = useState<number>(0)\n  const [currentLineup, setCurrentLineup] = useState<Lineup | null>(null)\n  const [showLineupBuilder, setShowLineupBuilder] = useState(false)\n  const [selectedLineupPlayers, setSelectedLineupPlayers] = useState<number[]>([])\n  const [lineupName, setLineupName] = useState('')\n  const [isEditingClock, setIsEditingClock] = useState(false);\n  \n  // DEV-ONLY: Action history for undo functionality\n  const [actionHistory, setActionHistory] = useState<Array<{\n    type: 'stat' | 'substitution' | 'timeout' | 'score' | 'quarter'\n    timestamp: number\n    data: any\n    previousState: any\n  }>>([])\n  const [clockInputValue, setClockInputValue] = useState('');\n  const clockInputRef = useRef<HTMLInputElement>(null);\n  // DEV-ONLY: Quick substitution state\n  const [showQuickSubModal, setShowQuickSubModal] = useState(false)\n  const [substitutionPlayerOut, setSubstitutionPlayerOut] = useState<Player | null>(null)\n  const [substitutionPlayerIn, setSubstitutionPlayerIn] = useState<Player | null>(null)\n  const [quickSubHistory, setQuickSubHistory] = useState<Array<{playerIn: Player, playerOut: Player, timestamp: number}>>([])\n  const [showSubHistory, setShowSubHistory] = useState(false)\n  // 1. Add a ref for the Player In select\n  const playerInSelectRef = useRef<any>(null);\n\n  // DEV-ONLY: Enhanced substitution state\n  const [showSubstitutionModal, setShowSubstitutionModal] = useState(false)\n  const [substitutionStep, setSubstitutionStep] = useState<'select-out' | 'select-in' | 'confirm'>('select-out')\n  const [substitutionHistory, setSubstitutionHistory] = useState<Array<{\n    playerIn: Player\n    playerOut: Player\n    timestamp: number\n    quarter: number\n    gameTime: number\n    lineupId?: string\n  }>>([])\n\n  // DEV-ONLY: Save settings to localStorage\n  const saveSettings = useCallback((newSettings: Partial<GameSettings>) => {\n    const updatedSettings = { ...settings, ...newSettings }\n    setSettings(updatedSettings)\n    \n    if (typeof window !== 'undefined') {\n      try {\n        localStorage.setItem('basketballStatsSettings', JSON.stringify(updatedSettings))\n      } catch (error) {\n        console.warn('Failed to save settings to localStorage:', error)\n      }\n    }\n  }, [settings])\n\n  // DEV-ONLY: Reset settings to defaults\n  const resetSettings = () => {\n    setSettings(defaultSettings)\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('basketballStatsSettings')\n    }\n  }\n\n  // DEV-ONLY: Export settings\n  const exportSettings = () => {\n    const settingsData = {\n      settings,\n      exportTime: new Date().toISOString(),\n      version: '1.0'\n    }\n    \n    const dataStr = JSON.stringify(settingsData, null, 2)\n    const dataBlob = new Blob([dataStr], { type: 'application/json' })\n    const url = URL.createObjectURL(dataBlob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = `basketball-stats-settings-${Date.now()}.json`\n    link.click()\n  }\n\n  // DEV-ONLY: Import settings\n  const importSettings = (file: File) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      try {\n        const importedSettings = JSON.parse(e.target?.result as string)\n        if (importedSettings.settings) {\n          saveSettings(importedSettings.settings)\n        }\n      } catch (error) {\n        console.error('Failed to import settings:', error)\n      }\n    }\n    reader.readAsText(file)\n  }\n\n  // DEV-ONLY: Game clock timer with enhanced functionality\n  useEffect(() => {\n    let interval: NodeJS.Timeout\n    if (gameState.isPlaying && gameState.currentTime > 0) {\n      interval = setInterval(() => {\n        setGameState(prev => ({\n          ...prev,\n          currentTime: prev.currentTime - 1\n        }))\n      }, 1000)\n    }\n    return () => clearInterval(interval)\n  }, [gameState.isPlaying, gameState.currentTime])\n\n  // DEV-ONLY: Apply game configuration settings\n  useEffect(() => {\n    setGameState(prev => ({\n      ...prev,\n      currentTime: settings.quarterDuration * 60,\n      timeoutHome: settings.timeoutCount,\n      timeoutAway: settings.timeoutCount\n    }))\n  }, [settings.quarterDuration, settings.timeoutCount])\n\n  // DEV-ONLY: Apply workflow mode changes\n  useEffect(() => {\n    setWorkflowMode(settings.workflowMode)\n  }, [settings.workflowMode])\n\n  // DEV-ONLY: Check for halftime with settings integration\n  useEffect(() => {\n    if (gameState.quarter === 2 && gameState.currentTime === 300 && settings.halftimeReminder) {\n      setShowHalftimeReport(true)\n    }\n  }, [gameState.quarter, gameState.currentTime, settings.halftimeReminder])\n\n  // DEV-ONLY: Enhanced timeout tracking with settings integration\n  const handleTimeout = (team: 'home' | 'away') => {\n    // Save current state for undo\n    const previousState = {\n      players: players,\n      gameState: gameState,\n      events: events\n    }\n\n    const currentGameTime = (settings.quarterDuration * 60) - gameState.currentTime\n    setLastTimeoutTime(currentGameTime)\n    \n    setGameState(prev => ({\n      ...prev,\n      timeoutHome: team === 'home' ? Math.max(0, prev.timeoutHome - 1) : prev.timeoutHome,\n      timeoutAway: team === 'away' ? Math.max(0, prev.timeoutAway - 1) : prev.timeoutAway,\n      isPlaying: settings.autoPauseOnTimeout ? false : prev.isPlaying\n    }))\n    \n    // Show instant timeout report if enabled\n    if (settings.timeoutReminder) {\n      setShowTimeoutReport(true)\n    }\n\n    // Add to action history\n    setActionHistory(prev => [{\n      type: 'timeout',\n      timestamp: Date.now(),\n      data: { team },\n      previousState\n    }, ...prev.slice(0, 49)]) // Keep last 50 actions\n  }\n\n  // DEV-ONLY: Generate comprehensive halftime insights\n  const generateHalftimeInsights = () => {\n    const topScorer = players.reduce((max, p) => p.points > max.points ? p : max, players[0]);\n    const topRebounder = players.reduce((max, p) => p.rebounds > max.rebounds ? p : max, players[0]);\n    const topAssister = players.reduce((max, p) => p.assists > max.assists ? p : max, players[0]);\n    const mostEfficient = players.reduce((max, p) => {\n      const efficiency = p.points + p.rebounds + p.assists + p.steals + p.blocks - p.turnovers - p.fouls;\n      return efficiency > max.efficiency ? { player: p, efficiency } : max;\n    }, { player: players[0], efficiency: players[0].points + players[0].rebounds + players[0].assists + players[0].steals + players[0].blocks - players[0].turnovers - players[0].fouls });\n\n    const teamStats = calculateTeamStats();\n    // Calculate opponent stats for first half\n    const opponentStats = {\n      totalRebounds: events.filter(e => e.opponentEvent && (e.eventType === 'defensive_rebound' || e.eventType === 'offensive_rebound') && e.gameTime <= (settings.quarterDuration * 60 * 2)).length,\n      totalTurnovers: events.filter(e => e.opponentEvent && e.eventType === 'turnover' && e.gameTime <= (settings.quarterDuration * 60 * 2)).length,\n    };\n    // Opponent run at end of half\n    const recentOpponentRun = calculateOpponentRun(events.filter(e => e.gameTime >= (settings.quarterDuration * 60 * 2) - 120));\n    // Opponent hot hand in first half\n    const hotOpponent = findHotOpponent(events.filter(e => e.opponentEvent && e.gameTime <= (settings.quarterDuration * 60 * 2)));\n\n    const halftimeData = {\n      topScorer,\n      topRebounder,\n      topAssister,\n      mostEfficient,\n      teamStats,\n      pace: teamStats.pace,\n      recommendations: [] as string[],\n      recentOpponentRun,\n      hotOpponent,\n    };\n    halftimeData.recommendations = generateHalftimeRecommendations(\n      teamStats,\n      players,\n      gameState,\n      opponentStats,\n      halftimeData\n    );\n    return halftimeData;\n  };\n\n  // Helper: Calculate opponent scoring run in recent events\n  function calculateOpponentRun(recentEvents: StatEvent[]) {\n    let run = 0;\n    for (let i = recentEvents.length - 1; i >= 0; i--) {\n      const e = recentEvents[i];\n      if (e.opponentEvent && (e.eventType.includes('made') || e.eventType === 'points')) {\n        run += e.value || (e.eventType === 'three_made' ? 3 : e.eventType === 'ft_made' ? 1 : 2);\n      } else if (!e.opponentEvent && (e.eventType.includes('made') || e.eventType === 'points')) {\n        break; // Our team scored, break the run\n      }\n    }\n    return run;\n  }\n\n  // Helper: Find opponent hot hand (most points in recent events)\n  function findHotOpponent(recentEvents: StatEvent[]) {\n    const oppPoints: Record<string, number> = {};\n    for (const e of recentEvents) {\n      if (e.opponentEvent && (e.eventType.includes('made') || e.eventType === 'points')) {\n        oppPoints[e.playerName] = (oppPoints[e.playerName] || 0) + (e.value || (e.eventType === 'three_made' ? 3 : e.eventType === 'ft_made' ? 1 : 2));\n      }\n    }\n    let maxName = null, maxPoints = 0;\n    for (const name in oppPoints) {\n      if (oppPoints[name] > maxPoints) {\n        maxPoints = oppPoints[name];\n        maxName = name;\n      }\n    }\n    return maxPoints >= 6 ? { name: maxName, points: maxPoints } : null;\n  }\n\n  // Advanced timeout recommendations\n  function generateTimeoutRecommendations(\n    momentum: string,\n    recentEvents: StatEvent[],\n    players: Player[],\n    gameState: GameState,\n    teamStats: any,\n    opponentStats: any\n  ) {\n    const recommendations: string[] = [];\n\n    // Momentum\n    if (momentum === 'negative') {\n      recommendations.push('Call a set play to stop the run');\n      recommendations.push('Emphasize defense and communication');\n    } else {\n      recommendations.push('Keep up the tempo and pressure');\n      recommendations.push('Look for transition opportunities');\n    }\n\n    // Scoring runs\n    const opponentRun = calculateOpponentRun(recentEvents);\n    if (opponentRun >= 6) {\n      recommendations.push(`Opponent is on a ${opponentRun}-0 run. Consider a defensive switch or timeout.`);\n    }\n\n    // Foul trouble\n    const foulTroublePlayers = players.filter(p => p.fouls >= 3);\n    if (foulTroublePlayers.length > 0) {\n      recommendations.push(`Watch foul trouble: ${foulTroublePlayers.map(p => p.name).join(', ')}`);\n    }\n\n    // Rebounding\n    if (teamStats.totalRebounds < opponentStats.totalRebounds) {\n      recommendations.push('Crash the boards harder—opponent is out-rebounding you.');\n    }\n\n    // Turnovers\n    if (teamStats.totalTurnovers > opponentStats.totalTurnovers) {\n      recommendations.push('Take care of the ball—limit turnovers.');\n    }\n\n    // Shot selection\n    if (teamStats.fgPercentage < 40) {\n      recommendations.push('Work for higher percentage shots—attack the rim.');\n    }\n\n    // Bench usage\n    const tiredPlayers = players.filter(p => p.minutesPlayed > 20);\n    if (tiredPlayers.length > 0) {\n      recommendations.push(`Get fresh legs in: ${tiredPlayers.map(p => p.name).join(', ')}`);\n    }\n\n    // Opponent hot hand\n    const hotOpponent = findHotOpponent(recentEvents);\n    if (hotOpponent) {\n      recommendations.push(`Deny the ball to ${hotOpponent.name}—they are heating up (${hotOpponent.points} pts).`);\n    }\n\n    // Turnovers in recent events\n    if (recentEvents.some(e => e.eventType === 'turnover')) {\n      recommendations.push('Take care of the ball - no more turnovers');\n    }\n\n    return recommendations;\n  }\n\n  // DEV-ONLY: Generate timeout insights\n  const generateTimeoutInsights = () => {\n    // Last 2 minutes of events\n    const recentEvents = events.filter(e => e.gameTime >= lastTimeoutTime - 120);\n    const recentScoring = recentEvents.filter(e => e.eventType.includes('made') || e.eventType === 'points');\n    const recentTurnovers = recentEvents.filter(e => e.eventType === 'turnover');\n    const momentum = recentScoring.length > recentTurnovers.length ? 'positive' : 'negative';\n\n    // Player highlights (last 2 min)\n    const playersInWindow = players.map(p => {\n      // Aggregate stats for this player in recentEvents\n      const stats = recentEvents.filter(e => e.playerId === p.id);\n      const points = stats.filter(e => e.eventType.includes('made') || e.eventType === 'points').reduce((sum, e) => sum + (e.value || (e.eventType === 'three_made' ? 3 : e.eventType === 'ft_made' ? 1 : 2)), 0);\n      const rebounds = stats.filter(e => e.eventType.includes('rebound')).length;\n      const assists = stats.filter(e => e.eventType === 'assist').length;\n      const plusMinus = stats.reduce((sum, e) => sum + (e.eventType.includes('made') ? (e.value || 2) : 0) - (e.eventType === 'turnover' ? 2 : 0), 0);\n      const fouls = stats.filter(e => e.eventType === 'foul').length;\n      const turnovers = stats.filter(e => e.eventType === 'turnover').length;\n      const efficiency = points + rebounds + assists - turnovers - fouls;\n      return {\n        ...p,\n        points,\n        rebounds,\n        assists,\n        plusMinus,\n        fouls,\n        turnovers,\n        efficiency,\n      };\n    });\n    const topScorer = playersInWindow.reduce((max, p) => p.points > max.points ? p : max, playersInWindow[0]);\n    const topRebounder = playersInWindow.reduce((max, p) => p.rebounds > max.rebounds ? p : max, playersInWindow[0]);\n    const topAssister = playersInWindow.reduce((max, p) => p.assists > max.assists ? p : max, playersInWindow[0]);\n    const mostEfficient = playersInWindow.reduce((max, p) => {\n      const efficiency = p.points + p.rebounds + p.assists - p.turnovers - p.fouls;\n      return efficiency > max.efficiency ? { player: p, efficiency } : max;\n    }, { player: playersInWindow[0], efficiency: playersInWindow[0].points + playersInWindow[0].rebounds + playersInWindow[0].assists - playersInWindow[0].turnovers - playersInWindow[0].fouls });\n\n    // Team stats (last 2 min)\n    const teamStats = {\n      totalPoints: playersInWindow.reduce((sum, p) => sum + p.points, 0),\n      totalRebounds: playersInWindow.reduce((sum, p) => sum + p.rebounds, 0),\n      totalAssists: playersInWindow.reduce((sum, p) => sum + p.assists, 0),\n      totalTurnovers: playersInWindow.reduce((sum, p) => sum + (p.turnovers || 0), 0),\n      fgAttempted: recentEvents.filter(e => e.eventType === 'fg_attempt' || e.eventType === 'fg_made').length,\n      fgMade: recentEvents.filter(e => e.eventType === 'fg_made').length,\n      assistToTurnoverRatio: playersInWindow.reduce((sum, p) => sum + p.assists, 0) / (playersInWindow.reduce((sum, p) => sum + (p.turnovers || 0), 0) || 1),\n      pace: Math.round((playersInWindow.reduce((sum, p) => sum + p.points, 0) + gameState.opponentScore) / (120 / 60) * 40),\n      projectedFinal: Math.round(((playersInWindow.reduce((sum, p) => sum + p.points, 0) + gameState.opponentScore) / (120 / 60)) * (settings.quarterDuration * settings.totalQuarters)),\n      fgPercentage: 0, // placeholder\n    };\n    teamStats.fgPercentage = teamStats.fgAttempted > 0 ? Math.round((teamStats.fgMade / teamStats.fgAttempted) * 100) : 0;\n\n    // Opponent run/hot hand (last 2 min)\n    const opponentStats = {\n      totalRebounds: recentEvents.filter(e => e.opponentEvent && (e.eventType === 'defensive_rebound' || e.eventType === 'offensive_rebound')).length,\n      totalTurnovers: recentEvents.filter(e => e.opponentEvent && e.eventType === 'turnover').length,\n    };\n    const recentOpponentRun = calculateOpponentRun(recentEvents);\n    const hotOpponent = findHotOpponent(recentEvents);\n\n    // Recommendations (reuse halftime logic, but pass windowed stats)\n    const recommendations = generateHalftimeRecommendations(\n      teamStats,\n      playersInWindow,\n      gameState,\n      opponentStats,\n      { momentum, pace: teamStats.pace, hotOpponent }\n    );\n\n    return {\n      recentEvents,\n      momentum,\n      keyPlayer: topScorer, // or mostEfficient\n      recommendations,\n      teamStats,\n      topScorer,\n      topRebounder,\n      topAssister,\n      mostEfficient,\n      recentOpponentRun,\n      hotOpponent,\n      pace: teamStats.pace,\n      projectedFinal: teamStats.projectedFinal,\n      lead: gameState.homeScore - gameState.opponentScore,\n    };\n  }\n\n  // DEV-ONLY: Generate halftime recommendations\n  const generateRecommendations = (teamStats: any, players: Player[]) => {\n    const recommendations = []\n    \n    if (teamStats.fgPercentage < 40) {\n      recommendations.push('Focus on shot selection - consider driving to the basket more')\n    }\n    if (teamStats.assistToTurnoverRatio < 1) {\n      recommendations.push('Improve ball security - reduce turnovers and increase assists')\n    }\n    if (teamStats.totalRebounds < 15) {\n      recommendations.push('Crash the boards harder - need more rebounding effort')\n    }\n    if (gameState.opponentScore > gameState.homeScore) {\n      recommendations.push('Tighten up defense - opponents scoring too easily')\n    }\n    \n    return recommendations\n  }\n\n  // DEV-ONLY: Generate advanced halftime recommendations\n  const generateHalftimeRecommendations = (\n    teamStats: any,\n    players: Player[],\n    gameState: GameState,\n    opponentStats: any,\n    halftimeData: any\n  ) => {\n    const recommendations: string[] = []\n\n    // Momentum analysis\n    if (halftimeData.momentum === 'positive') {\n      recommendations.push('Maintain the momentum - keep up the pressure and tempo')\n      recommendations.push('Look for transition opportunities and fast breaks')\n    } else {\n      recommendations.push('Regroup and focus on fundamentals')\n      recommendations.push('Emphasize defense and ball security')\n    }\n\n    // Scoring analysis\n    if (teamStats.fgPercentage < 40) {\n      recommendations.push('Improve shot selection - attack the rim more')\n    }\n    if (teamStats.threePercentage < 30) {\n      recommendations.push('Consider fewer three-point attempts - focus on high-percentage shots')\n    }\n\n    // Ball security\n    if (teamStats.assistToTurnoverRatio < 1) {\n      recommendations.push('Improve ball movement and reduce turnovers')\n    }\n    if (teamStats.totalTurnovers > 8) {\n      recommendations.push('Take care of the ball - too many turnovers')\n    }\n\n    // Rebounding\n    if (teamStats.totalRebounds < opponentStats.totalRebounds) {\n      recommendations.push('Crash the boards harder - opponent is out-rebounding you')\n    }\n\n    // Foul trouble\n    const foulTroublePlayers = players.filter(p => p.fouls >= 3)\n    if (foulTroublePlayers.length > 0) {\n      recommendations.push(`Manage foul trouble: ${foulTroublePlayers.map(p => p.name).join(', ')}`)\n    }\n\n    // Bench usage\n    const tiredPlayers = players.filter(p => p.minutesPlayed > 15)\n    if (tiredPlayers.length > 0) {\n      recommendations.push(`Get fresh legs in: ${tiredPlayers.map(p => p.name).join(', ')}`)\n    }\n\n    // Opponent analysis\n    if (halftimeData.hotOpponent) {\n      recommendations.push(`Deny the ball to ${halftimeData.hotOpponent.name} - they are heating up`)\n    }\n\n    // Lead/deficit analysis\n    const scoreDiff = gameState.homeScore - gameState.opponentScore\n    if (scoreDiff > 10) {\n      recommendations.push('Maintain the lead - don\\'t let up on defense')\n    } else if (scoreDiff < -10) {\n      recommendations.push('Need to pick up the pace - focus on scoring and defense')\n    } else {\n      recommendations.push('Close game - every possession matters')\n    }\n\n    // Pace analysis\n    if (halftimeData.pace > 80) {\n      recommendations.push('High-paced game - manage energy and substitutions')\n    } else if (halftimeData.pace < 60) {\n      recommendations.push('Slow game - look for transition opportunities')\n    }\n\n    return recommendations\n  }\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}:${secs.toString().padStart(2, '0')}`\n  }\n\n  // DEV-ONLY: Undo last action function\n  const undoLastAction = () => {\n    if (actionHistory.length === 0) return\n\n    const lastAction = actionHistory[0]\n    const previousState = lastAction.previousState\n\n    // Restore previous state\n    setPlayers(previousState.players)\n    setGameState(previousState.gameState)\n    setEvents(previousState.events)\n\n    // Remove the last action from history\n    setActionHistory(prev => prev.slice(1))\n  }\n\n  // DEV-ONLY: Handle opponent score change with undo support\n  const handleOpponentScoreChange = (points: number) => {\n    // Save current state for undo\n    const previousState = {\n      players: players,\n      gameState: gameState,\n      events: events\n    }\n\n    setGameState(prev => ({ ...prev, opponentScore: prev.opponentScore + points }))\n\n    // Add to action history\n    setActionHistory(prev => [{\n      type: 'score',\n      timestamp: Date.now(),\n      data: { points, team: 'opponent' },\n      previousState\n    }, ...prev.slice(0, 49)]) // Keep last 50 actions\n  }\n\n  // DEV-ONLY: Enhanced stat event handler with workflow mode support and undo tracking\n  const handleStatEvent = useCallback((playerId: number, eventType: string, value?: number, isOpponent: boolean = false) => {\n    const player = players.find(p => p.id === playerId)\n    if (!player) return\n\n    // Save current state for undo\n    const previousState = {\n      players: players,\n      gameState: gameState,\n      events: events\n    }\n\n    // DEV-ONLY: Apply foul trouble alert\n    if (eventType === 'foul' && settings.foulTroubleAlert && player.fouls >= 2) {\n      // Could show notification here\n      console.log(`⚠️ Foul trouble alert: ${player.name} has ${player.fouls + 1} fouls`)\n    }\n\n    const newEvent: StatEvent = {\n      id: Date.now().toString(),\n      timestamp: Date.now(),\n      playerId,\n      playerName: player.name,\n      eventType,\n      value,\n      quarter: gameState.quarter,\n      gameTime: (settings.quarterDuration * 60) - gameState.currentTime,\n      opponentEvent: isOpponent\n    }\n\n    setEvents(prev => [newEvent, ...prev])\n\n    // Update player stats\n    setPlayers(prev => prev.map(p => {\n      if (p.id !== playerId) return p;\n      const updated = { ...p };\n      switch (eventType) {\n        case 'points':\n          updated.points += value || 2;\n          updated.plusMinus += value || 2;\n          break;\n        case 'rebound':\n          updated.rebounds += 1;\n          break;\n        case 'offensive_rebound':\n          updated.offensiveRebounds += 1;\n          updated.rebounds += 1;\n          break;\n        case 'defensive_rebound':\n          updated.defensiveRebounds += 1;\n          updated.rebounds += 1;\n          break;\n        case 'assist':\n          updated.assists += 1;\n          break;\n        case 'steal':\n          updated.steals += 1;\n          updated.plusMinus += 2;\n          break;\n        case 'block':\n          updated.blocks += 1;\n          break;\n        case 'foul':\n          updated.fouls += 1;\n          break;\n        case 'turnover':\n          updated.turnovers += 1;\n          updated.plusMinus -= 2;\n          break;\n        case 'charge_taken':\n          updated.chargesTaken += 1;\n          updated.plusMinus += 2;\n          break;\n        case 'deflection':\n          updated.deflections += 1;\n          break;\n        case 'fg_attempt':\n          updated.fgAttempted += 1;\n          break;\n        case 'fg_made':\n          updated.fgMade += 1;\n          updated.points += 2;\n          updated.plusMinus += 2;\n          break;\n        case 'three_attempt':\n          updated.threeAttempted += 1;\n          break;\n        case 'three_made':\n          updated.threeMade += 1;\n          updated.points += 3;\n          updated.plusMinus += 3;\n          break;\n        case 'ft_attempt':\n          updated.ftAttempted += 1;\n          break;\n        case 'ft_made':\n          updated.ftMade += 1;\n          updated.points += 1;\n          updated.plusMinus += 1;\n          break;\n      }\n      return updated;\n    }));\n\n    // Update team score for points\n    if (eventType.includes('made') || eventType === 'points') {\n      const points = eventType === 'three_made' ? 3 : eventType === 'ft_made' ? 1 : value || 2\n      if (isOpponent) {\n        setGameState(prev => ({\n          ...prev,\n          opponentScore: prev.opponentScore + points\n        }))\n      } else {\n        setGameState(prev => ({\n          ...prev,\n          homeScore: prev.homeScore + points\n        }))\n      }\n    }\n\n    // Add to action history\n    setActionHistory(prev => [{\n      type: 'stat',\n      timestamp: Date.now(),\n      data: { playerId, eventType, value, isOpponent },\n      previousState\n    }, ...prev.slice(0, 49)]) // Keep last 50 actions\n  }, [players, gameState.quarter, gameState.currentTime, settings.foulTroubleAlert, actionHistory])\n\n  // DEV-ONLY: Auto-export functionality\n  useEffect(() => {\n    if (settings.autoExport && gameState.isPlaying) {\n      const interval = setInterval(() => {\n        const gameData = {\n          gameState,\n          players,\n          events,\n          lineups,\n          exportTime: new Date().toISOString()\n        }\n        \n        if (settings.exportFormat === 'json') {\n          const dataStr = JSON.stringify(gameData, null, 2)\n          const dataBlob = new Blob([dataStr], { type: 'application/json' })\n          const url = URL.createObjectURL(dataBlob)\n          const link = document.createElement('a')\n          link.href = url\n          link.download = `auto-export-${Date.now()}.json`\n          link.click()\n        }\n      }, settings.exportInterval * 60 * 1000) // Convert minutes to milliseconds\n      \n      return () => clearInterval(interval)\n    }\n  }, [settings.autoExport, settings.exportInterval, settings.exportFormat, gameState.isPlaying, players, events, lineups])\n\n  // DEV-ONLY: Foul trouble alerts\n  useEffect(() => {\n    if (settings.foulTroubleAlert) {\n      const playersInFoulTrouble = players.filter(p => p.fouls >= 3)\n      if (playersInFoulTrouble.length > 0) {\n        // Could show notification here\n        console.log('Foul trouble alert:', playersInFoulTrouble.map(p => p.name))\n      }\n    }\n  }, [players, settings.foulTroubleAlert])\n\n  // DEV-ONLY: Apply display settings\n  useEffect(() => {\n    if (settings.darkMode) {\n      document.body.classList.add('dark-mode')\n    } else {\n      document.body.classList.remove('dark-mode')\n    }\n  }, [settings.darkMode])\n\n  // DEV-ONLY: Enhanced export functionality for game data\n  const exportGameData = (format: 'csv' | 'json' | 'pdf') => {\n    const gameData: any = {\n      exportTime: new Date().toISOString()\n    }\n\n    if (settings.includePlayerStats) {\n      gameData.players = players\n    }\n    if (settings.includeTeamStats) {\n      gameData.gameState = gameState\n      gameData.teamStats = calculateTeamStats()\n    }\n    if (settings.includeLineupData) {\n      gameData.lineups = lineups\n    }\n    gameData.events = events\n\n    if (format === 'json') {\n      const dataStr = JSON.stringify(gameData, null, 2)\n      const dataBlob = new Blob([dataStr], { type: 'application/json' })\n      const url = URL.createObjectURL(dataBlob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `game-stats-${Date.now()}.json`\n      link.click()\n    } else if (format === 'csv') {\n      // DEV-ONLY: Enhanced CSV export with settings\n      const csvContent = generateCSV(gameData)\n      const dataBlob = new Blob([csvContent], { type: 'text/csv' })\n      const url = URL.createObjectURL(dataBlob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `game-stats-${Date.now()}.csv`\n      link.click()\n    }\n  }\n\n  // DEV-ONLY: Enhanced CSV generation with settings\n  const generateCSV = (gameData: any) => {\n    const headers = ['Player', 'Number', 'Position', 'Minutes', 'Points', 'Rebounds', 'Assists', 'Steals', 'Blocks', 'Fouls', 'Turnovers', 'FG%', '3PT%', 'FT%', '+/-']\n    const rows = gameData.players.map((player: Player) => [\n      player.name,\n      settings.showPlayerNumbers ? player.number : '',\n      settings.showPositions ? player.position : '',\n      player.minutesPlayed,\n      player.points,\n      player.rebounds,\n      player.assists,\n      player.steals,\n      player.blocks,\n      player.fouls,\n      player.turnovers,\n      player.fgAttempted > 0 ? `${Math.round((player.fgMade / player.fgAttempted) * 100)}%` : '0%',\n      player.threeAttempted > 0 ? `${Math.round((player.threeMade / player.threeAttempted) * 100)}%` : '0%',\n      player.ftAttempted > 0 ? `${Math.round((player.ftMade / player.ftAttempted) * 100)}%` : '0%',\n      player.plusMinus\n    ])\n    \n    return [headers, ...rows].map(row => row.join(',')).join('\\n')\n  }\n\n  // DEV-ONLY: Calculate team analytics with advanced stats\n  const calculateTeamStats = () => {\n    const totalPoints = players.reduce((sum, p) => sum + p.points, 0)\n    const totalRebounds = players.reduce((sum, p) => sum + p.rebounds, 0)\n    const totalAssists = players.reduce((sum, p) => sum + p.assists, 0)\n    const totalTurnovers = players.reduce((sum, p) => sum + p.turnovers, 0)\n    const totalFgAttempted = players.reduce((sum, p) => sum + p.fgAttempted, 0)\n    const totalFgMade = players.reduce((sum, p) => sum + p.fgMade, 0)\n    const totalSteals = players.reduce((sum, p) => sum + p.steals, 0)\n    const totalBlocks = players.reduce((sum, p) => sum + p.blocks, 0)\n    \n    const gameTimeElapsed = (settings.quarterDuration * 60) - gameState.currentTime\n    const pace = Math.round((totalPoints + gameState.opponentScore) / (gameTimeElapsed / 60) * 40)\n    \n    return {\n      totalPoints,\n      totalRebounds,\n      totalAssists,\n      totalTurnovers,\n      totalSteals,\n      totalBlocks,\n      fgPercentage: totalFgAttempted > 0 ? Math.round((totalFgMade / totalFgAttempted) * 100) : 0,\n      assistToTurnoverRatio: totalTurnovers > 0 ? (totalAssists / totalTurnovers).toFixed(2) : '0.00',\n      pace,\n      projectedFinal: Math.round(pace * 0.4)\n    }\n  }\n\n  // DEV-ONLY: Enhanced lineup management functions\n  const createLineup = () => {\n    if (selectedLineupPlayers.length !== 5) {\n      return // Need exactly 5 players\n    }\n\n    const newLineup: Lineup = {\n      id: Date.now().toString(),\n      players: selectedLineupPlayers,\n      startTime: (settings.quarterDuration * 60) - gameState.currentTime,\n      plusMinus: 0\n    }\n\n    setLineups(prev => [...prev, newLineup])\n    setCurrentLineup(newLineup)\n    setSelectedLineupPlayers([])\n    setLineupName('')\n    setShowLineupBuilder(false)\n\n    // Update player court status\n    setPlayers(prev => prev.map(p => ({\n      ...p,\n      isOnCourt: selectedLineupPlayers.includes(p.id)\n    })))\n  }\n\n  const endCurrentLineup = () => {\n    if (!currentLineup) return\n\n    const endTime = (settings.quarterDuration * 60) - gameState.currentTime\n    const lineupDuration = endTime - currentLineup.startTime\n    \n    // Calculate lineup plus/minus\n    const lineupPlayers = players.filter(p => currentLineup.players.includes(p.id))\n    const totalPlusMinus = lineupPlayers.reduce((sum, p) => sum + p.plusMinus, 0)\n\n    setLineups(prev => prev.map(l => \n      l.id === currentLineup.id \n        ? { ...l, endTime, plusMinus: totalPlusMinus }\n        : l\n    ))\n\n    setCurrentLineup(null)\n    \n    // Remove all players from court\n    setPlayers(prev => prev.map(p => ({ ...p, isOnCourt: false })))\n  }\n\n  // DEV-ONLY: Enhanced substitution function with comprehensive tracking\n  const substitutePlayer = (playerIn: Player, playerOut: Player) => {\n    // Save current state for undo\n    const previousState = {\n      players: players,\n      gameState: gameState,\n      events: events,\n      lineups: lineups,\n      currentLineup: currentLineup\n    }\n\n    // End current lineup if it exists\n    if (currentLineup) {\n      const endTime = (settings.quarterDuration * 60) - gameState.currentTime\n      const lineupDuration = endTime - currentLineup.startTime\n      \n      // Calculate lineup plus/minus\n      const lineupPlayers = players.filter(p => currentLineup.players.includes(p.id))\n      const totalPlusMinus = lineupPlayers.reduce((sum, p) => sum + p.plusMinus, 0)\n\n      setLineups(prev => prev.map(l => \n        l.id === currentLineup.id \n          ? { ...l, endTime, plusMinus: totalPlusMinus }\n          : l\n      ))\n    }\n\n    // Create new lineup with the substitution\n    const newLineupPlayers = currentLineup ? \n      currentLineup.players.map(p => p === playerOut.id ? playerIn.id : p) :\n      [playerIn.id, ...players.slice(0, 4).map(p => p.id)]\n\n    const newLineup: Lineup = {\n      id: `lineup-${Date.now()}`,\n      players: newLineupPlayers,\n      startTime: (settings.quarterDuration * 60) - gameState.currentTime,\n      plusMinus: 0\n    }\n\n    setCurrentLineup(newLineup)\n    setLineups(prev => [...prev, newLineup])\n\n    // Update player court status\n    setPlayers(prev => prev.map(p => ({\n      ...p,\n      isOnCourt: p.id === playerIn.id ? true : p.id === playerOut.id ? false : p.isOnCourt\n    })))\n\n    // Track comprehensive substitution history\n    const substitutionRecord = {\n      playerIn,\n      playerOut,\n      timestamp: Date.now(),\n      quarter: gameState.quarter,\n      gameTime: (settings.quarterDuration * 60) - gameState.currentTime,\n      lineupId: newLineup.id\n    }\n    setSubstitutionHistory(prev => [substitutionRecord, ...prev.slice(0, 49)]) // Keep last 50\n\n    // Add detailed substitution events to game events\n    const substitutionEvent: StatEvent = {\n      id: `sub_${Date.now()}`,\n      timestamp: Date.now(),\n      playerId: playerIn.id,\n      playerName: playerIn.name,\n      eventType: 'substitution_in',\n      quarter: gameState.quarter,\n      gameTime: (settings.quarterDuration * 60) - gameState.currentTime\n    }\n\n    const substitutionOutEvent: StatEvent = {\n      id: `sub_out_${Date.now()}`,\n      timestamp: Date.now(),\n      playerId: playerOut.id,\n      playerName: playerOut.name,\n      eventType: 'substitution_out',\n      quarter: gameState.quarter,\n      gameTime: (settings.quarterDuration * 60) - gameState.currentTime\n    }\n\n    const lineupChangeEvent: StatEvent = {\n      id: `lineup_${Date.now()}`,\n      timestamp: Date.now(),\n      playerId: 0, // Team event\n      playerName: 'TEAM',\n      eventType: 'lineup_change',\n      quarter: gameState.quarter,\n      gameTime: (settings.quarterDuration * 60) - gameState.currentTime\n    }\n\n    setEvents(prev => [substitutionEvent, substitutionOutEvent, lineupChangeEvent, ...prev])\n\n    // Auto-pause game during substitution if enabled\n    if (settings.autoPauseOnTimeout && gameState.isPlaying) {\n      setGameState(prev => ({ ...prev, isPlaying: false }))\n    }\n\n    // Add to action history for undo\n    setActionHistory(prev => [{\n      type: 'substitution',\n      timestamp: Date.now(),\n      data: { playerIn, playerOut, newLineup },\n      previousState\n    }, ...prev.slice(0, 49)]) // Keep last 50 actions\n  }\n\n  // DEV-ONLY: Quick substitution handler with undo support\n  const handleQuickSubstitution = (playerIn: Player, playerOut: Player) => {\n    // Save current state for undo\n    const previousState = {\n      players: players,\n      gameState: gameState,\n      events: events,\n      lineups: lineups,\n      currentLineup: currentLineup\n    }\n\n    substitutePlayer(playerIn, playerOut)\n    \n    // Update selected player if the substituted player was selected\n    if (selectedPlayer?.id === playerOut.id) {\n      setSelectedPlayer(playerIn)\n    }\n    \n    // Add to action history\n    setActionHistory(prev => [{\n      type: 'substitution',\n      timestamp: Date.now(),\n      data: { playerIn, playerOut },\n      previousState\n    }, ...prev.slice(0, 49)]) // Keep last 50 actions\n    \n    setShowQuickSubModal(false)\n    setSubstitutionPlayerIn(null)\n    setSubstitutionPlayerOut(null)\n  }\n\n  // DEV-ONLY: Undo last substitution\n  const undoLastSubstitution = () => {\n    if (quickSubHistory.length > 0) {\n      const lastSub = quickSubHistory[0]\n      substitutePlayer(lastSub.playerOut, lastSub.playerIn)\n      setQuickSubHistory(prev => prev.slice(1))\n    }\n  }\n\n  // DEV-ONLY: Keyboard shortcuts for quick substitutions\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      // Only handle shortcuts when not in input fields\n      if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n        return\n      }\n\n      // Quick substitution modal (Ctrl+S)\n      if (event.ctrlKey && event.key === 's') {\n        event.preventDefault()\n        if (currentLineup) {\n          setShowQuickSubModal(true)\n        }\n      }\n\n      // Undo last action (Ctrl+Z)\n      if (event.ctrlKey && event.key === 'z') {\n        event.preventDefault()\n        undoLastAction()\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [currentLineup, actionHistory])\n\n  // DEV-ONLY: Get substitution statistics\n  const getSubstitutionStats = () => {\n    const totalSubs = quickSubHistory.length\n    const uniquePlayers = new Set(quickSubHistory.flatMap(sub => [sub.playerIn.id, sub.playerOut.id])).size\n    const mostSubbedIn = players.reduce((most: { player: Player | null, count: number }, player: Player) => {\n      const count = quickSubHistory.filter(sub => sub.playerIn.id === player.id).length\n      return count > most.count ? { player, count } : most\n    }, { player: null, count: 0 })\n\n    return { totalSubs, uniquePlayers, mostSubbedIn }\n  }\n\n  // DEV-ONLY: Calculate lineup effectiveness\n  const calculateLineupEffectiveness = (lineup: Lineup) => {\n    const lineupPlayers = players.filter(p => lineup.players.includes(p.id))\n    const totalPoints = lineupPlayers.reduce((sum, p) => sum + p.points, 0)\n    const totalRebounds = lineupPlayers.reduce((sum, p) => sum + p.rebounds, 0)\n    const totalAssists = lineupPlayers.reduce((sum, p) => sum + p.assists, 0)\n    const totalTurnovers = lineupPlayers.reduce((sum, p) => sum + p.turnovers, 0)\n    const totalPlusMinus = lineupPlayers.reduce((sum, p) => sum + p.plusMinus, 0)\n    \n    const duration = lineup.endTime ? lineup.endTime - lineup.startTime : (settings.quarterDuration * 60) - gameState.currentTime - lineup.startTime\n    const minutesPlayed = Math.round(duration / 60 * 10) / 10\n\n    return {\n      totalPoints,\n      totalRebounds,\n      totalAssists,\n      totalTurnovers,\n      totalPlusMinus,\n      minutesPlayed,\n      efficiency: totalPlusMinus / minutesPlayed || 0\n    }\n  }\n\n  // DEV-ONLY: Get available players for substitution\n  const getAvailablePlayers = () => {\n    return players.filter(p => !p.isOnCourt)\n  }\n\n  // DEV-ONLY: Get current court players\n  const getCourtPlayers = () => {\n    return players.filter(p => p.isOnCourt)\n  }\n\n  const toggleGame = () => {\n    setGameState(prev => ({ ...prev, isPlaying: !prev.isPlaying }))\n  }\n\n  const resetGame = () => {\n    setGameState({\n      isPlaying: false,\n      currentTime: settings.quarterDuration * 60,\n      quarter: 1,\n      homeScore: 0,\n      awayScore: 0,\n      opponentScore: 0,\n      timeoutHome: settings.timeoutCount,\n      timeoutAway: settings.timeoutCount\n    })\n    setPlayers(prev => prev.map(p => ({ \n      ...p, \n      minutesPlayed: 0, points: 0, rebounds: 0, offensiveRebounds: 0, defensiveRebounds: 0, \n      assists: 0, steals: 0, blocks: 0, fouls: 0, turnovers: 0, fgAttempted: 0, fgMade: 0, \n      threeAttempted: 0, threeMade: 0, ftAttempted: 0, ftMade: 0, plusMinus: 0, \n      chargesTaken: 0, deflections: 0, isOnCourt: false \n    })))\n    setEvents([])\n    setLineups([])\n  }\n\n  const nextQuarter = () => {\n    // Save current state for undo\n    const previousState = {\n      players: players,\n      gameState: gameState,\n      events: events\n    }\n\n    setGameState(prev => ({\n      ...prev,\n      quarter: Math.min(prev.quarter + 1, settings.totalQuarters),\n      currentTime: settings.quarterDuration * 60\n    }))\n    \n    // DEV-ONLY: Auto-pause on quarter end if enabled\n    if (settings.autoPauseOnQuarterEnd) {\n      setGameState(prev => ({ ...prev, isPlaying: false }))\n    }\n\n    // Add to action history\n    setActionHistory(prev => [{\n      type: 'quarter',\n      timestamp: Date.now(),\n      data: { quarter: gameState.quarter + 1 },\n      previousState\n    }, ...prev.slice(0, 49)]) // Keep last 50 actions\n  }\n\n  const teamStats = calculateTeamStats()\n  const halftimeInsights = [\n    { title: 'Shooting Efficiency', value: `${teamStats.fgPercentage}%`, status: teamStats.fgPercentage < 40 ? 'error' : teamStats.fgPercentage < 50 ? 'warning' : 'success' },\n    { title: 'Rebound Rate', value: `${Math.round((teamStats.totalRebounds / (teamStats.totalRebounds + 20)) * 100)}%`, status: 'default' },\n    { title: 'Assist/Turnover Ratio', value: teamStats.assistToTurnoverRatio, status: parseFloat(teamStats.assistToTurnoverRatio) < 1 ? 'error' : parseFloat(teamStats.assistToTurnoverRatio) < 1.5 ? 'warning' : 'success' },\n    { title: 'Points per Quarter', value: Math.round(teamStats.totalPoints / gameState.quarter), status: 'default' }\n  ]\n\n  const halftimeData = generateHalftimeInsights()\n  const timeoutData = generateTimeoutInsights()\n\n  // DEV-ONLY: Enhanced player columns with settings\n  const playerColumns = [\n    { title: 'Player', dataIndex: 'name', key: 'name' },\n    ...(settings.showPlayerNumbers ? [{ title: '#', dataIndex: 'number', key: 'number' }] : []),\n    ...(settings.showPositions ? [{ title: 'Pos', dataIndex: 'position', key: 'position' }] : []),\n    { title: 'PTS', dataIndex: 'points', key: 'points' },\n    { title: 'REB', dataIndex: 'rebounds', key: 'rebounds' },\n    { title: 'AST', dataIndex: 'assists', key: 'assists' },\n    { title: 'STL', dataIndex: 'steals', key: 'steals' },\n    { title: 'BLK', dataIndex: 'blocks', key: 'blocks' },\n    { title: 'TO', dataIndex: 'turnovers', key: 'turnovers' },\n    { title: 'FG%', key: 'fgPercentage', render: (text: any, record: Player) => \n      record.fgAttempted > 0 ? `${Math.round((record.fgMade / record.fgAttempted) * 100)}%` : '0%'\n    },\n    { title: '+/-', dataIndex: 'plusMinus', key: 'plusMinus' },\n    ...(settings.showEfficiencyRatings ? [{ \n      title: 'EFF', \n      key: 'efficiency', \n      render: (text: any, record: Player) => {\n        const efficiency = record.points + record.rebounds + record.assists + record.steals + record.blocks - record.turnovers - record.fouls\n        return efficiency >= settings.efficiencyThreshold ? '⭐' : efficiency\n      }\n    }] : [])\n  ]\n\n  // DEV-ONLY: Create tabs items for modern API\n  const tabItems = [\n    {\n      key: 'tracking',\n      label: 'Live Tracking',\n      children: (\n        <Row gutter={[16, 16]}>\n          {settings.workflowMode === 'player-first' ? (\n            <>\n              <Col span={12}>\n                {/* Player box */}\n                <Card title=\"Player\" size={settings.compactMode ? 'small' : 'default'}>\n                  <Row gutter={[8, 8]}>\n                    <Col span={12}>\n                      {players.slice(0, 3).map(player => (\n                        <div key={player.id} className={`${style.playerCard} ${selectedPlayer?.id === player.id ? style.selected : ''}`}>\n                          <div onClick={() => setSelectedPlayer(player)} style={{ cursor: 'pointer', flex: 1 }}>\n                            <Text strong style={{ fontSize: settings.compactMode ? '0.8rem' : '0.9rem' }}>{settings.showPlayerNumbers && `#${player.number} `}{player.name}</Text>\n                            {settings.showPositions && (<><br /><Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}>{player.position}</Text></>)}\n                          </div>\n                          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end', gap: 4 }}>\n                            <div>\n                              <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                              <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> PTS</Text>\n                              <br />\n                              <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                              <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> +/-</Text>\n                            </div>\n                            {player.isOnCourt && (\n                              <Button \n                                size=\"small\" \n                                type=\"primary\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleSubstitution(player)\n                                }}\n                                style={{ \n                                  fontSize: '0.7rem', \n                                  height: 24, \n                                  padding: '0 8px',\n                                  backgroundColor: '#ff4d4f',\n                                  borderColor: '#ff4d4f'\n                                }}\n                              >\n                                Sub\n                              </Button>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </Col>\n                    <Col span={12}>\n                      {players.slice(3, 5).map(player => (\n                        <div key={player.id} className={`${style.playerCard} ${selectedPlayer?.id === player.id ? style.selected : ''}`}>\n                          <div onClick={() => setSelectedPlayer(player)} style={{ cursor: 'pointer', flex: 1 }}>\n                            <Text strong style={{ fontSize: settings.compactMode ? '0.8rem' : '0.9rem' }}>{settings.showPlayerNumbers && `#${player.number} `}{player.name}</Text>\n                            {settings.showPositions && (<><br /><Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}>{player.position}</Text></>)}\n                          </div>\n                          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end', gap: 4 }}>\n                            <div>\n                              <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                              <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> PTS</Text>\n                              <br />\n                              <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                              <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> +/-</Text>\n                            </div>\n                            {player.isOnCourt && (\n                              <Button \n                                size=\"small\" \n                                type=\"primary\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleSubstitution(player)\n                                }}\n                                style={{ \n                                  fontSize: '0.7rem', \n                                  height: 24, \n                                  padding: '0 8px',\n                                  backgroundColor: '#ff4d4f',\n                                  borderColor: '#ff4d4f'\n                                }}\n                              >\n                                Sub\n                              </Button>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                      <div style={{ marginTop: 8 }}>\n                        <Button type=\"primary\" icon={<TeamOutlined />} onClick={() => {\n                          if (!currentLineup) {\n                            const firstFivePlayers = players.slice(0, 5).map(p => p.id)\n                            const newLineup = { id: `lineup-${Date.now()}`, players: firstFivePlayers, startTime: gameState.currentTime, plusMinus: 0 }\n                            setCurrentLineup(newLineup)\n                            setLineups(prev => [...prev, newLineup])\n                            setPlayers(prev => prev.map(p => ({ ...p, isOnCourt: firstFivePlayers.includes(p.id) })))\n                          }\n                          setShowQuickSubModal(true)\n                        }} size=\"small\" block style={{ backgroundColor: '#2563eb', borderColor: '#2563eb', color: '#fff', fontWeight: 600, height: 40, fontSize: '0.9rem' }}>{currentLineup ? 'Quick Substitution' : 'Start Lineup & Sub'}</Button>\n                        {quickSubHistory.length > 0 && (\n                          <Button size=\"small\" onClick={undoLastSubstitution} block style={{ marginTop: 4, height: 28, fontSize: '0.8rem' }}>Undo Last Sub</Button>\n                        )}\n                      </div>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={12}>\n                {/* Action box */}\n                <Card title=\"Action\" size={settings.compactMode ? 'small' : 'default'}>\n                  <Row gutter={[8, 8]}>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'fg_made')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        2PT Made\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'fg_missed')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        2PT Miss\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'three_made')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        3PT Made\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'three_missed')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        3PT Miss\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'ft_made')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        FT Made\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'ft_missed')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        FT Miss\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'rebound')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        Rebound\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'assist')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        Assist\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'steal')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        Steal\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'block')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        Block\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        danger\n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'turnover')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        Turnover\n                      </Button>\n                    </Col>\n                    <Col span={8}>\n                      <Button \n                        size=\"middle\"\n                        block \n                        danger\n                        onClick={() => selectedPlayer && handleStatEvent(selectedPlayer.id, 'foul')}\n                        disabled={!selectedPlayer}\n                        className={style.quickStatButton}\n                      >\n                        Foul\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card title=\"Play by Play\" size=\"small\">\n                  <div className={style.eventsFeed}>\n                    {events.slice(0, 10).map(event => (\n                      <div key={event.id} className={style.eventItem}>\n                        <Text type=\"secondary\">{formatTime(event.gameTime)}</Text>\n                        <Text strong>{event.playerName}</Text>\n                        <Text>{event.eventType}</Text>\n                        {event.value && <Badge count={event.value} />}\n                        {event.opponentEvent && <Badge count=\"OPP\" style={{ backgroundColor: '#f5222d' }} />}\n                      </div>\n                    ))}\n                  </div>\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card title=\"Player Statistics\" size=\"small\">\n                  {selectedPlayer ? (\n                    <div>\n                      <Title level={4}>\n                        {settings.showPlayerNumbers && `#${selectedPlayer.number} `}{selectedPlayer.name}\n                        {settings.showPositions && ` (${selectedPlayer.position})`}\n                      </Title>\n                      <Row gutter={16}>\n                        <Col span={8}>\n                          <Statistic title=\"Points\" value={selectedPlayer.points} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Rebounds\" value={selectedPlayer.rebounds} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Assists\" value={selectedPlayer.assists} />\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={8}>\n                          <Statistic title=\"Steals\" value={selectedPlayer.steals} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Blocks\" value={selectedPlayer.blocks} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Fouls\" value={selectedPlayer.fouls} />\n                        </Col>\n                      </Row>\n                      <Divider />\n                      <Text>FG: {selectedPlayer.fgMade}/{selectedPlayer.fgAttempted} ({selectedPlayer.fgAttempted > 0 ? Math.round((selectedPlayer.fgMade / selectedPlayer.fgAttempted) * 100) : 0}%)</Text>\n                      <br />\n                      <Text>3PT: {selectedPlayer.threeMade}/{selectedPlayer.threeAttempted} ({selectedPlayer.threeAttempted > 0 ? Math.round((selectedPlayer.threeMade / selectedPlayer.threeAttempted) * 100) : 0}%)</Text>\n                      <br />\n                      <Text>FT: {selectedPlayer.ftMade}/{selectedPlayer.ftAttempted} ({selectedPlayer.ftAttempted > 0 ? Math.round((selectedPlayer.ftMade / selectedPlayer.ftAttempted) * 100) : 0}%)</Text>\n                      <br />\n                      <Text>+/-: {selectedPlayer.plusMinus}</Text>\n                      {settings.showEfficiencyRatings && (\n                        <>\n                          <br />\n                          <Text>Efficiency: {selectedPlayer.points + selectedPlayer.rebounds + selectedPlayer.assists + selectedPlayer.steals + selectedPlayer.blocks - selectedPlayer.turnovers - selectedPlayer.fouls}</Text>\n                        </>\n                      )}\n                      {settings.showTrends && selectedPlayer.plusMinus > 0 && (\n                        <>\n                          <br />\n                          <Text type=\"success\">📈 Positive impact on court</Text>\n                        </>\n                      )}\n                    </div>\n                  ) : (\n                    <Text type=\"secondary\">No player selected</Text>\n                  )}\n                </Card>\n              </Col>\n            </>\n          ) : (\n            <>\n              <Col span={12}>\n                {/* Action box */}\n                <Card title=\"Action\" size={settings.compactMode ? 'small' : 'default'}>\n                  <Row gutter={[8, 8]}>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'fg_made' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'fg_made' ? null : 'fg_made')}\n                      >\n                        {settings.compactMode ? '2PT' : '2PT Made'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'three_made' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'three_made' ? null : 'three_made')}\n                      >\n                        {settings.compactMode ? '3PT' : '3PT Made'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'ft_made' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'ft_made' ? null : 'ft_made')}\n                      >\n                        {settings.compactMode ? 'FT' : 'FT Made'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'defensive_rebound' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'defensive_rebound' ? null : 'defensive_rebound')}\n                      >\n                        {settings.compactMode ? 'DEF' : 'Def Rebound'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'offensive_rebound' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'offensive_rebound' ? null : 'offensive_rebound')}\n                      >\n                        {settings.compactMode ? 'OFF' : 'Off Rebound'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'assist' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'assist' ? null : 'assist')}\n                      >\n                        {settings.compactMode ? 'AST' : 'Assist'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'steal' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'steal' ? null : 'steal')}\n                      >\n                        {settings.compactMode ? 'STL' : 'Steal'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'block' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'block' ? null : 'block')}\n                      >\n                        {settings.compactMode ? 'BLK' : 'Block'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        danger\n                        type={selectedAction === 'foul' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'foul' ? null : 'foul')}\n                      >\n                        {settings.compactMode ? 'FL' : 'Foul'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        danger\n                        type={selectedAction === 'turnover' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'turnover' ? null : 'turnover')}\n                      >\n                        {settings.compactMode ? 'TO' : 'Turnover'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'charge_taken' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'charge_taken' ? null : 'charge_taken')}\n                      >\n                        {settings.compactMode ? 'CHG' : 'Charge'}\n                      </Button>\n                    </Col>\n                    <Col span={settings.compactMode ? 12 : 8}>\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        block \n                        type={selectedAction === 'deflection' ? 'primary' : 'default'}\n                        onClick={() => setSelectedAction(selectedAction === 'deflection' ? null : 'deflection')}\n                      >\n                        {settings.compactMode ? 'DEFL' : 'Deflection'}\n                      </Button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={12}>\n                {/* Player Selection for Action First */}\n                <Card title=\"Player\" size={settings.compactMode ? 'small' : 'default'}>\n                  <Row gutter={[8, 8]}>\n                    {/* First Column - Players 1-3 */}\n                    <Col span={12}>\n                      {players.slice(0, 3).map(player => (\n                        <div \n                          key={player.id} \n                          className={`${style.playerCard} ${selectedPlayer?.id === player.id ? style.selected : ''}`}\n                          onClick={() => {\n                            if (selectedAction) {\n                              // If an action is selected, record it for this player\n                              handleStatEvent(player.id, selectedAction);\n                              setSelectedAction(null); // Clear the selected action\n                              setSelectedPlayer(player); // Also update the selected player\n                            } else {\n                              // If no action is selected, just select the player\n                              setSelectedPlayer(player);\n                            }\n                          }}\n                        >\n                          <div>\n                            <Text strong style={{ fontSize: settings.compactMode ? '0.8rem' : '0.9rem' }}>\n                              {settings.showPlayerNumbers && `#${player.number} `}{player.name}\n                            </Text>\n                            {settings.showPositions && (\n                              <>\n                                <br />\n                                <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}>\n                                  {player.position}\n                                </Text>\n                              </>\n                            )}\n                          </div>\n                          <div>\n                            <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                            <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> PTS</Text>\n                            <br />\n                            <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                            <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> +/-</Text>\n                          </div>\n                        </div>\n                      ))}\n                    </Col>\n                    {/* Second Column - Players 4-5 + Substitution Button */}\n                    <Col span={12}>\n                      {players.slice(3, 5).map(player => (\n                        <div \n                          key={player.id} \n                          className={`${style.playerCard} ${selectedPlayer?.id === player.id ? style.selected : ''}`}\n                          onClick={() => {\n                            if (selectedAction) {\n                              // If an action is selected, record it for this player\n                              handleStatEvent(player.id, selectedAction);\n                              setSelectedAction(null); // Clear the selected action\n                              setSelectedPlayer(player); // Also update the selected player\n                            } else {\n                              // If no action is selected, just select the player\n                              setSelectedPlayer(player);\n                            }\n                          }}\n                        >\n                          <div>\n                            <Text strong style={{ fontSize: settings.compactMode ? '0.8rem' : '0.9rem' }}>\n                              {settings.showPlayerNumbers && `#${player.number} `}{player.name}\n                            </Text>\n                            {settings.showPositions && (\n                              <>\n                                <br />\n                                <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}>\n                                  {player.position}\n                                </Text>\n                              </>\n                            )}\n                          </div>\n                          <div>\n                            <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                            <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> PTS</Text>\n                            <br />\n                            <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                            <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.6rem' : '0.8rem' }}> +/-</Text>\n                          </div>\n                        </div>\n                      ))}\n                      {/* Substitution Button in 3rd row of second column */}\n                      <div style={{ marginTop: 8 }}>\n                        <Button\n                          type=\"primary\"\n                          icon={<TeamOutlined />}\n                          onClick={() => {\n                            if (!currentLineup) {\n                              const firstFivePlayers = players.slice(0, 5).map(p => p.id)\n                              const newLineup = { id: `lineup-${Date.now()}`, players: firstFivePlayers, startTime: gameState.currentTime, plusMinus: 0 }\n                              setCurrentLineup(newLineup)\n                              setLineups(prev => [...prev, newLineup])\n                              setPlayers(prev => prev.map(p => ({\n                                ...p,\n                                isOnCourt: firstFivePlayers.includes(p.id)\n                              })))\n                            }\n                            setShowQuickSubModal(true)\n                            setSubstitutionPlayerOut(null)\n                            setSubstitutionPlayerIn(null)\n                          }}\n                          size=\"small\"\n                          block\n                          style={{\n                            backgroundColor: '#2563eb',\n                            borderColor: '#2563eb',\n                            color: '#fff',\n                            fontWeight: 600,\n                            height: 40,\n                            fontSize: '0.9rem',\n                          }}\n                        >\n                          {currentLineup ? 'Substitution' : 'Start Lineup & Sub'}\n                        </Button>\n                        {quickSubHistory.length > 0 && (\n                          <Button\n                            size=\"small\"\n                            onClick={undoLastSubstitution}\n                            block\n                            style={{\n                              marginTop: 4,\n                              height: 28,\n                              fontSize: '0.8rem',\n                            }}\n                          >\n                            Undo Last Sub\n                          </Button>\n                        )}\n                      </div>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card title=\"Play by Play\" size=\"small\">\n                  <div className={style.eventsFeed}>\n                    {events.slice(0, 10).map(event => (\n                      <div key={event.id} className={style.eventItem}>\n                        <Text type=\"secondary\">{formatTime(event.gameTime)}</Text>\n                        <Text strong>{event.playerName}</Text>\n                        <Text>{event.eventType}</Text>\n                        {event.value && <Badge count={event.value} />}\n                        {event.opponentEvent && <Badge count=\"OPP\" style={{ backgroundColor: '#f5222d' }} />}\n                      </div>\n                    ))}\n                  </div>\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card title=\"Player Statistics\" size=\"small\">\n                  {selectedPlayer ? (\n                    <div>\n                      <Title level={4}>\n                        {settings.showPlayerNumbers && `#${selectedPlayer.number} `}{selectedPlayer.name}\n                        {settings.showPositions && ` (${selectedPlayer.position})`}\n                      </Title>\n                      <Row gutter={16}>\n                        <Col span={8}>\n                          <Statistic title=\"Points\" value={selectedPlayer.points} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Rebounds\" value={selectedPlayer.rebounds} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Assists\" value={selectedPlayer.assists} />\n                        </Col>\n                      </Row>\n                      <Row gutter={16}>\n                        <Col span={8}>\n                          <Statistic title=\"Steals\" value={selectedPlayer.steals} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Blocks\" value={selectedPlayer.blocks} />\n                        </Col>\n                        <Col span={8}>\n                          <Statistic title=\"Fouls\" value={selectedPlayer.fouls} />\n                        </Col>\n                      </Row>\n                      <Divider />\n                      <Text>FG: {selectedPlayer.fgMade}/{selectedPlayer.fgAttempted} ({selectedPlayer.fgAttempted > 0 ? Math.round((selectedPlayer.fgMade / selectedPlayer.fgAttempted) * 100) : 0}%)</Text>\n                      <br />\n                      <Text>3PT: {selectedPlayer.threeMade}/{selectedPlayer.threeAttempted} ({selectedPlayer.threeAttempted > 0 ? Math.round((selectedPlayer.threeMade / selectedPlayer.threeAttempted) * 100) : 0}%)</Text>\n                      <br />\n                      <Text>FT: {selectedPlayer.ftMade}/{selectedPlayer.ftAttempted} ({selectedPlayer.ftAttempted > 0 ? Math.round((selectedPlayer.ftMade / selectedPlayer.ftAttempted) * 100) : 0}%)</Text>\n                      <br />\n                      <Text>+/-: {selectedPlayer.plusMinus}</Text>\n                      {settings.showEfficiencyRatings && (\n                        <>\n                          <br />\n                          <Text>Efficiency: {selectedPlayer.points + selectedPlayer.rebounds + selectedPlayer.assists + selectedPlayer.steals + selectedPlayer.blocks - selectedPlayer.turnovers - selectedPlayer.fouls}</Text>\n                        </>\n                      )}\n                      {settings.showTrends && selectedPlayer.plusMinus > 0 && (\n                        <>\n                          <br />\n                          <Text type=\"success\">📈 Positive impact on court</Text>\n                        </>\n                      )}\n                    </div>\n                  ) : (\n                    <Text type=\"secondary\">No player selected</Text>\n                  )}\n                </Card>\n              </Col>\n            </>\n          )}\n        </Row>\n      )\n    },\n    {\n      key: 'analytics',\n      label: 'Analytics',\n      children: (\n        <Row gutter={[16, 16]}>\n          <Col span={12}>\n            <Card title=\"Team Statistics\" className={style.teamStatsCard}>\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Statistic title=\"Total Points\" value={teamStats.totalPoints} />\n                </Col>\n                <Col span={12}>\n                  <Statistic title=\"Total Rebounds\" value={teamStats.totalRebounds} />\n                </Col>\n                <Col span={12}>\n                  <Statistic title=\"Total Assists\" value={teamStats.totalAssists} />\n                </Col>\n                <Col span={12}>\n                  <Statistic title=\"Total Turnovers\" value={teamStats.totalTurnovers} />\n                </Col>\n                <Col span={12}>\n                  <Statistic title=\"FG%\" value={`${teamStats.fgPercentage}%`} />\n                </Col>\n                <Col span={12}>\n                  <Statistic title=\"A/T Ratio\" value={teamStats.assistToTurnoverRatio} />\n                </Col>\n                {settings.showAdvancedStats && (\n                  <>\n                    <Col span={12}>\n                      <Statistic title=\"Total Steals\" value={teamStats.totalSteals} />\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title=\"Total Blocks\" value={teamStats.totalBlocks} />\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title=\"Game Pace\" value={`${teamStats.pace} pts/game`} />\n                    </Col>\n                    <Col span={12}>\n                      <Statistic title=\"Projected Final\" value={`${teamStats.projectedFinal} pts`} />\n                    </Col>\n                  </>\n                )}\n              </Row>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title=\"Player Performance\" className={style.playerPerformanceCard}>\n              <Table \n                dataSource={players} \n                columns={playerColumns} \n                size=\"small\"\n                pagination={false}\n                scroll={{ y: 300 }}\n              />\n            </Card>\n          </Col>\n          {/* DEV-ONLY: Substitution History Panel */}\n          <Col span={24}>\n            <Card title=\"Substitution History & Analytics\" size=\"small\">\n              <Row gutter={[16, 16]}>\n                <Col span={8}>\n                  <Card title=\"Substitution Stats\" size=\"small\">\n                    {(() => {\n                      const stats = getSubstitutionStats()\n                      return (\n                        <div>\n                          <Statistic title=\"Total Substitutions\" value={stats.totalSubs} />\n                          <Statistic title=\"Unique Players Used\" value={stats.uniquePlayers} />\n                          {stats.mostSubbedIn.player && (\n                            <div style={{ marginTop: 16 }}>\n                              <Text strong>Most Subbed In:</Text>\n                              <br />\n                              <Text>#{stats.mostSubbedIn.player.number} {stats.mostSubbedIn.player.name}</Text>\n                              <br />\n                              <Text type=\"secondary\">{stats.mostSubbedIn.count} times</Text>\n                            </div>\n                          )}\n                        </div>\n                      )\n                    })()}\n                  </Card>\n                </Col>\n                <Col span={16}>\n                  <Card title=\"Recent Substitutions\" size=\"small\">\n                    {quickSubHistory.length > 0 ? (\n                      <div style={{ maxHeight: 200, overflowY: 'auto' }}>\n                        {quickSubHistory.map((sub, index) => (\n                          <div key={index} style={{ \n                            display: 'flex', \n                            justifyContent: 'space-between', \n                            alignItems: 'center',\n                            padding: '8px 12px',\n                            margin: '4px 0',\n                            background: '#f5f5f5',\n                            borderRadius: 6,\n                            border: '1px solid #e8e8e8'\n                          }}>\n                            <div>\n                              <Text strong>#{sub.playerOut.number} {sub.playerOut.name}</Text>\n                              <Text type=\"secondary\" style={{ margin: '0 8px' }}>→</Text>\n                              <Text strong>#{sub.playerIn.number} {sub.playerIn.name}</Text>\n                            </div>\n                            <div>\n                              <Text type=\"secondary\" style={{ fontSize: '0.8rem' }}>\n                                {new Date(sub.timestamp).toLocaleTimeString()}\n                              </Text>\n                              <Button \n                                size=\"small\" \n                                type=\"text\"\n                                onClick={() => {\n                                  substitutePlayer(sub.playerOut, sub.playerIn)\n                                  setQuickSubHistory(prev => prev.filter((_, i) => i !== index))\n                                }}\n                                style={{ marginLeft: 8 }}\n                              >\n                                Undo\n                              </Button>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <Text type=\"secondary\">No substitutions yet</Text>\n                    )}\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      )\n    },\n    {\n      key: 'lineups',\n      label: 'Lineups',\n      children: (\n        <Row gutter={[16, 16]}>\n          <Col span={12}>\n            <Card title=\"Current Lineup\" size=\"small\">\n              {currentLineup ? (\n                <div>\n                  <div style={{ marginBottom: 16, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Text strong style={{ fontSize: '1.1rem', color: '#f5f7fa' }}>Active Lineup</Text>\n                    <Button \n                      danger \n                      size=\"small\" \n                      onClick={endCurrentLineup}\n                      style={{ fontWeight: 600 }}\n                    >\n                      End Lineup\n                    </Button>\n                  </div>\n                  \n                  <div style={{ marginBottom: 16 }}>\n                    <Text strong style={{ fontSize: '0.9rem', color: '#94a3b8', marginBottom: 8, display: 'block' }}>\n                      Court Players:\n                    </Text>\n                    {getCourtPlayers().map(player => (\n                      <div key={player.id} className={style.courtPlayer}>\n                        <div>\n                          <Text strong style={{ fontSize: '1rem', color: '#f5f7fa' }}>#{player.number} {player.name}</Text>\n                          <br />\n                          <Text style={{ fontSize: '0.8rem', color: '#cbd5e1' }}>\n                            {player.position} • {player.points}PTS • {player.plusMinus}+/-\n                          </Text>\n                        </div>\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n                          <Badge count={player.points} style={{ backgroundColor: '#2563eb' }} />\n                          <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#2563eb' : '#ef4444' }} />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  <Divider style={{ borderColor: '#334155' }} />\n                  \n                  <div>\n                    <Text strong style={{ fontSize: '0.9rem', color: '#94a3b8', marginBottom: 8, display: 'block' }}>\n                      Lineup Performance:\n                    </Text>\n                    {(() => {\n                      const effectiveness = calculateLineupEffectiveness(currentLineup)\n                      return (\n                        <Row gutter={[16, 8]}>\n                          <Col span={8}>\n                            <Statistic \n                              title=\"Points\" \n                              value={effectiveness.totalPoints} \n                              valueStyle={{ fontSize: '1.2rem', fontWeight: 600 }}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            <Statistic \n                              title=\"+/-\" \n                              value={effectiveness.totalPlusMinus}\n                              valueStyle={{ \n                                fontSize: '1.2rem', \n                                fontWeight: 600,\n                                color: effectiveness.totalPlusMinus >= 0 ? '#52c41a' : '#f5222d'\n                              }}\n                            />\n                          </Col>\n                          <Col span={8}>\n                            <Statistic \n                              title=\"Minutes\" \n                              value={effectiveness.minutesPlayed}\n                              valueStyle={{ fontSize: '1.2rem', fontWeight: 600 }}\n                            />\n                          </Col>\n                          <Col span={12}>\n                            <Statistic \n                              title=\"Efficiency\" \n                              value={effectiveness.efficiency.toFixed(2)}\n                              valueStyle={{ fontSize: '1.2rem', fontWeight: 600, color: '#1890ff' }}\n                            />\n                          </Col>\n                          <Col span={12}>\n                            <Statistic \n                              title=\"Rebounds\" \n                              value={effectiveness.totalRebounds}\n                              valueStyle={{ fontSize: '1.2rem', fontWeight: 600 }}\n                            />\n                          </Col>\n                        </Row>\n                      )\n                    })()}\n                  </div>\n                </div>\n                              ) : (\n                  <div style={{ textAlign: 'center', padding: '20px' }}>\n                    <Text style={{ fontSize: '1rem', marginBottom: 16, display: 'block', color: '#94a3b8' }}>\n                      No active lineup\n                    </Text>\n                    <Button \n                      type=\"primary\" \n                      size=\"middle\"\n                      onClick={() => setShowLineupBuilder(true)}\n                      style={{ fontWeight: 600 }}\n                    >\n                      Create Lineup\n                    </Button>\n                  </div>\n                )}\n            </Card>\n          </Col>\n          \n          <Col span={12}>\n            <Card title=\"Quick Substitutions\" size=\"small\">\n              {currentLineup ? (\n                <div>\n                  <div style={{ marginBottom: 16 }}>\n                    <Button \n                      type=\"primary\" \n                      size=\"middle\"\n                      icon={<TeamOutlined />}\n                      onClick={() => setShowQuickSubModal(true)}\n                      style={{ \n                        width: '100%', \n                        marginBottom: 8,\n                        height: 40,\n                        fontWeight: 600,\n                        backgroundColor: '#2563eb',\n                        borderColor: '#2563eb'\n                      }}\n                    >\n                      Quick Substitution\n                    </Button>\n                    {quickSubHistory.length > 0 && (\n                      <Button \n                        size=\"small\"\n                        onClick={undoLastSubstitution}\n                        style={{ width: '100%', height: 32 }}\n                      >\n                        Undo Last Substitution\n                      </Button>\n                    )}\n                  </div>\n\n                  {quickSubHistory.length > 0 && (\n                    <div style={{ marginBottom: 16 }}>\n                      <Text strong style={{ fontSize: '0.9rem', color: '#94a3b8', marginBottom: 8, display: 'block' }}>\n                        Recent Substitutions:\n                      </Text>\n                      <div style={{ maxHeight: 120, overflowY: 'auto' }}>\n                        {quickSubHistory.slice(0, 3).map((sub, index) => (\n                          <div key={index} style={{ \n                            padding: '8px 12px',\n                            margin: '4px 0',\n                            background: '#1e3a5c',\n                            borderRadius: 6,\n                            border: '1px solid #2563eb'\n                          }}>\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                              <div>\n                                <Text strong style={{ fontSize: '0.9rem', color: '#f5f7fa' }}>\n                                  #{sub.playerOut.number} {sub.playerOut.name}\n                                </Text>\n                                <Text style={{ margin: '0 8px', fontSize: '0.9rem', color: '#94a3b8' }}>→</Text>\n                                <Text strong style={{ fontSize: '0.9rem', color: '#f5f7fa' }}>\n                                  #{sub.playerIn.number} {sub.playerIn.name}\n                                </Text>\n                              </div>\n                              <Text style={{ fontSize: '0.8rem', color: '#94a3b8' }}>\n                                {new Date(sub.timestamp).toLocaleTimeString()}\n                              </Text>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  <div style={{ marginBottom: 16 }}>\n                    <Text strong style={{ fontSize: '0.9rem', color: '#94a3b8', marginBottom: 8, display: 'block' }}>\n                      Available Players:\n                    </Text>\n                    <div style={{ maxHeight: 200, overflowY: 'auto' }}>\n                      {getAvailablePlayers().map(player => (\n                        <div key={player.id} className={style.availablePlayer}>\n                          <div>\n                            <Text strong style={{ fontSize: '0.9rem', color: '#f5f7fa' }}>#{player.number} {player.name}</Text>\n                            <br />\n                            <Text style={{ fontSize: '0.8rem', color: '#cbd5e1' }}>\n                              {player.position} • {player.points}PTS • {player.plusMinus}+/-\n                            </Text>\n                          </div>\n                          <Button \n                            size=\"small\"\n                            type=\"primary\"\n                            onClick={() => {\n                              setSubstitutionPlayerIn(player)\n                              setShowQuickSubModal(true)\n                            }}\n                            style={{ fontWeight: 600 }}\n                          >\n                            Sub In\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                              ) : (\n                  <div style={{ textAlign: 'center', padding: '20px' }}>\n                    <Text style={{ fontSize: '1rem', marginBottom: 16, display: 'block', color: '#94a3b8' }}>\n                      No active lineup for substitutions\n                    </Text>\n                    <Button \n                      type=\"primary\" \n                      size=\"middle\"\n                      onClick={() => setShowLineupBuilder(true)}\n                      style={{ fontWeight: 600 }}\n                    >\n                      Create Lineup First\n                    </Button>\n                  </div>\n                )}\n            </Card>\n          </Col>\n          \n          <Col span={24}>\n            <Card title=\"Lineup History\" size=\"small\">\n              <div className={style.lineupHistory}>\n                {lineups.length > 0 ? (\n                  lineups.map(lineup => {\n                    const effectiveness = calculateLineupEffectiveness(lineup)\n                    return (\n                      <div key={lineup.id} className={style.lineupCard}>\n                        <div className={style.lineupHeader}>\n                          <Text strong style={{ fontSize: '1rem' }}>Lineup #{lineup.id.slice(-4)}</Text>\n                          <Badge \n                            count={effectiveness.totalPlusMinus} \n                            style={{ \n                              backgroundColor: effectiveness.totalPlusMinus >= 0 ? '#52c41a' : '#f5222d',\n                              fontSize: '0.8rem',\n                              fontWeight: 600\n                            }}\n                          />\n                        </div>\n                        <div className={style.lineupPlayers}>\n                          {lineup.players.map(playerId => {\n                            const player = players.find(p => p.id === playerId)\n                            return player ? (\n                              <Text key={playerId} type=\"secondary\" style={{ fontSize: '0.9rem' }}>\n                                #{player.number} {player.name} ({player.position})\n                              </Text>\n                            ) : null\n                          })}\n                        </div>\n                        <div className={style.lineupStats}>\n                          <Text type=\"secondary\" style={{ fontSize: '0.8rem' }}>\n                            {effectiveness.minutesPlayed}min • {effectiveness.totalPoints}pts • {effectiveness.efficiency.toFixed(2)} eff\n                          </Text>\n                        </div>\n                      </div>\n                    )\n                  })\n                ) : (\n                  <div style={{ textAlign: 'center', padding: '20px' }}>\n                    <Text style={{ fontSize: '1rem', color: '#94a3b8' }}>\n                      No lineup history yet\n                    </Text>\n                  </div>\n                )}\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      )\n    }\n  ]\n\n  // DEV-ONLY: Ensure consistent className to prevent hydration mismatch\n  const containerClassName = [\n    style.container,\n    settings.compactMode ? style.compactMode : '',\n    settings.darkMode ? style.darkMode : ''\n  ].filter(Boolean).join(' ')\n\n  // Focus input when editing\n  useEffect(() => {\n    if (isEditingClock && clockInputRef.current) {\n      clockInputRef.current.focus();\n      clockInputRef.current.select();\n    }\n  }, [isEditingClock]);\n\n  // Parse mm:ss string to seconds\n  const parseClockInput = (value: string) => {\n    const match = value.match(/^(\\d{1,2}):(\\d{2})$/);\n    if (!match) return null;\n    const min = parseInt(match[1], 10);\n    const sec = parseInt(match[2], 10);\n    if (isNaN(min) || isNaN(sec) || sec > 59) return null;\n    return min * 60 + sec;\n  };\n\n  // Format seconds to mm:ss\n  const formatClockInput = (seconds: number) => {\n    const min = Math.floor(seconds / 60);\n    const sec = seconds % 60;\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  };\n\n  // Handle clock edit save\n  const saveClockEdit = () => {\n    const newSeconds = parseClockInput(clockInputValue);\n    if (newSeconds !== null) {\n      setGameState(prev => ({ ...prev, currentTime: newSeconds }));\n    }\n    setIsEditingClock(false);\n  };\n\n  // Before return, compute if scrolling is needed\n  const needsScoreScroll = gameState.homeScore >= 100 || gameState.opponentScore >= 100;\n\n  // After all hooks, before return in Statistics component\n  const selectedPlayerData = selectedPlayer ? players.find(p => p.id === selectedPlayer.id) : null;\n\n  // 2. In the Modal, focus the Player In select when Player Out is set\n  useEffect(() => {\n    if (showQuickSubModal && substitutionPlayerOut && playerInSelectRef.current) {\n      setTimeout(() => playerInSelectRef.current.focus?.(), 100);\n    }\n  }, [showQuickSubModal, substitutionPlayerOut]);\n\n  // Add a new effect to open the modal after substitutionPlayerOut is set\n  useEffect(() => {\n    if (substitutionPlayerOut && !showQuickSubModal) {\n      setShowQuickSubModal(true);\n    }\n  }, [substitutionPlayerOut]);\n\n  // After the Modal JSX, add this effect:\n  useEffect(() => {\n    if (showQuickSubModal && substitutionPlayerOut && substitutionPlayerIn) {\n      handleQuickSubstitution(substitutionPlayerIn, substitutionPlayerOut)\n      setShowQuickSubModal(false)\n      setSubstitutionPlayerIn(null)\n      setSubstitutionPlayerOut(null)\n    }\n  }, [showQuickSubModal, substitutionPlayerOut, substitutionPlayerIn])\n\n  // DEV-ONLY: Enhanced substitution handler with modal flow management\n  const handleSubstitution = (playerOut: Player) => {\n    setSubstitutionPlayerOut(playerOut)\n    setSubstitutionStep('select-in')\n    setShowSubstitutionModal(true)\n  }\n\n  // DEV-ONLY: Enhanced substitution confirmation\n  const confirmSubstitution = () => {\n    if (substitutionPlayerOut && substitutionPlayerIn) {\n      substitutePlayer(substitutionPlayerIn, substitutionPlayerOut)\n      \n      // Update selected player if the substituted player was selected\n      if (selectedPlayer?.id === substitutionPlayerOut.id) {\n        setSelectedPlayer(substitutionPlayerIn)\n      }\n      \n      // Reset substitution state\n      setShowSubstitutionModal(false)\n      setSubstitutionPlayerIn(null)\n      setSubstitutionPlayerOut(null)\n      setSubstitutionStep('select-out')\n    }\n  }\n\n  // DEV-ONLY: Enhanced substitution modal management\n  const resetSubstitutionModal = () => {\n    setShowSubstitutionModal(false)\n    setSubstitutionPlayerIn(null)\n    setSubstitutionPlayerOut(null)\n    setSubstitutionStep('select-out')\n  }\n\n  // DEV-ONLY: Get substitution analytics\n  const getSubstitutionAnalytics = () => {\n    const totalSubs = substitutionHistory.length\n    const uniquePlayers = new Set(substitutionHistory.flatMap(sub => [sub.playerIn.id, sub.playerOut.id])).size\n    const mostSubbedIn = players.reduce((most: { player: Player | null, count: number }, player: Player) => {\n      const count = substitutionHistory.filter(sub => sub.playerIn.id === player.id).length\n      return count > most.count ? { player, count } : most\n    }, { player: null, count: 0 })\n    const mostSubbedOut = players.reduce((most: { player: Player | null, count: number }, player: Player) => {\n      const count = substitutionHistory.filter(sub => sub.playerOut.id === player.id).length\n      return count > most.count ? { player, count } : most\n    }, { player: null, count: 0 })\n\n    return { totalSubs, uniquePlayers, mostSubbedIn, mostSubbedOut }\n  }\n\n  return (\n    <div className={containerClassName}>\n      <Row gutter={[16, 16]}>\n        {/* Game Clock and Controls */}\n        <Col span={24}>\n          <Card\n            className={style.gameControlBar + (needsScoreScroll ? ' scroll-on-large-score' : '')}\n            styles={{ body: { padding: settings.compactMode ? '10px 8px' : '12px 12px' } }}\n          >\n            <div className={style.centerContent}>\n              <div className={style.scoreboardInner}>\n                <Row align=\"middle\" justify=\"center\" style={{ minHeight: settings.compactMode ? 90 : 120 }}>\n                  {/* Left: Quarter, Clock, Pace, Projected */}\n                  <Col flex=\"none\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minWidth: 90 }}>\n                    <Title level={settings.compactMode ? 2 : 1} style={{ margin: 0, letterSpacing: 2, lineHeight: 1 }}>\n                      Q{gameState.quarter}\n                    </Title>\n                    <div\n                      style={{ fontWeight: 700, fontSize: settings.compactMode ? '1.5rem' : '2.2rem', color: '#fff', lineHeight: 1, marginTop: 2, marginBottom: 2, cursor: isEditingClock ? 'auto' : 'pointer' }}\n                      title=\"Click to edit clock\"\n                      onClick={() => {\n                        if (!isEditingClock) {\n                          setClockInputValue(formatClockInput(gameState.currentTime));\n                          setIsEditingClock(true);\n                        }\n                      }}\n                    >\n                      {isEditingClock ? (\n                        <input\n                          ref={clockInputRef}\n                          type=\"text\"\n                          value={clockInputValue}\n                          onChange={e => setClockInputValue(e.target.value)}\n                          onBlur={saveClockEdit}\n                          onKeyDown={e => {\n                            if (e.key === 'Enter') saveClockEdit();\n                            if (e.key === 'Escape') setIsEditingClock(false);\n                          }}\n                          style={{\n                            fontWeight: 700,\n                            fontSize: settings.compactMode ? '1.5rem' : '2.2rem',\n                            width: '100px',\n                            textAlign: 'center',\n                            borderRadius: 4,\n                            border: '1px solid #1890ff',\n                            outline: 'none',\n                            color: '#222',\n                            background: '#fff',\n                            padding: '2px 6px',\n                          }}\n                          maxLength={5}\n                          pattern=\"^\\\\d{1,2}:\\\\d{2}$\"\n                        />\n                      ) : (\n                        formatTime(gameState.currentTime)\n                      )}\n                    </div>\n                    <div style={{ textAlign: 'center', marginTop: 4 }}>\n                      <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.8rem' : '1rem', display: 'block' }}>\n                        Pace: {teamStats.pace}\n                      </Text>\n                      <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.8rem' : '1rem', display: 'block' }}>\n                        Projected: {teamStats.projectedFinal}\n                      </Text>\n                    </div>\n                  </Col>\n\n                  {/* Game Controls: vertical stack */}\n                  <Col flex=\"none\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '0 12px' }}>\n                    <Button \n                      type=\"primary\" \n                      size={settings.compactMode ? 'small' : 'middle'}\n                      icon={gameState.isPlaying ? <PauseCircleOutlined /> : <PlayCircleOutlined />} \n                      onClick={toggleGame}\n                      style={{ marginBottom: 8, width: 110 }}\n                    >\n                      {gameState.isPlaying ? 'Pause' : 'Start'}\n                    </Button>\n                    <Button \n                      size={settings.compactMode ? 'small' : 'middle'}\n                      icon={<StopOutlined />} \n                      onClick={undoLastAction}\n                      disabled={actionHistory.length === 0}\n                      style={{ marginBottom: 8, width: 110 }}\n                    >\n                      Undo\n                    </Button>\n                    <Button \n                      size={settings.compactMode ? 'small' : 'middle'}\n                      icon={<ClockCircleOutlined />} \n                      onClick={nextQuarter} \n                      disabled={gameState.quarter >= settings.totalQuarters}\n                      style={{ width: 110 }}\n                    >\n                      Next Qtr\n                    </Button>\n                  </Col>\n\n                  {/* Divider */}\n                  <Col flex=\"none\" style={{ display: 'flex', alignItems: 'stretch', height: '100%' }}>\n                    <Divider type=\"vertical\" className={style.scoreboardDivider} style={{ height: '100%', minHeight: 80, margin: '0 3px' }} />\n                  </Col>\n\n                  {/* Center: Score, Timeouts, Timeout Buttons */}\n                  <Col flex=\"none\" style={{ display: 'flex', alignItems: 'center', minWidth: 260 }}>\n                    <div style={{ textAlign: 'center', flex: 1 }}>\n                      <Title level={settings.compactMode ? 2 : 1} style={{ margin: 0, letterSpacing: 2, lineHeight: 1 }}>\n                        <span\n                          className=\"score-value\"\n                          style={{ color: '#fff', fontWeight: 700 }}\n                        >\n                          HOME {gameState.homeScore}\n                        </span>\n                        <span style={{ color: '#aaa', fontWeight: 400 }}> - </span>\n                        <span\n                          className=\"score-value\"\n                          style={{ color: '#fff', fontWeight: 700 }}\n                        >\n                          {gameState.opponentScore} OPP\n                        </span>\n                      </Title>\n                      <div style={{ marginTop: 4, marginBottom: 4 }}>\n                        <Text type=\"secondary\" style={{ fontSize: settings.compactMode ? '0.8rem' : '1rem' }}>\n                          <span style={{ marginRight: 8 }}>Timeouts:</span>\n                          <Badge count={gameState.timeoutHome} style={{ backgroundColor: '#1890ff', marginRight: 4 }} />\n                          <Badge count={gameState.timeoutAway} style={{ backgroundColor: '#aaa', marginRight: 0 }} />\n                        </Text>\n                      </div>\n                      {/* Opponent Score Controls */}\n                      <div style={{ display: 'flex', justifyContent: 'center', gap: 8, marginTop: 4 }}>\n                        <Button size={settings.compactMode ? 'small' : 'middle'} onClick={() => handleOpponentScoreChange(1)}>+1 OPP</Button>\n                        <Button size={settings.compactMode ? 'small' : 'middle'} onClick={() => handleOpponentScoreChange(2)}>+2 OPP</Button>\n                        <Button size={settings.compactMode ? 'small' : 'middle'} onClick={() => handleOpponentScoreChange(3)}>+3 OPP</Button>\n                      </div>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column', marginLeft: 12 }}>\n                      <div style={{ textAlign: 'center', marginBottom: 2 }}>\n                        <Text style={{ fontSize: '0.7rem', color: '#fff', opacity: 0.4, letterSpacing: 1 }}>TIMEOUTS:</Text>\n                      </div>\n                      <Tooltip title=\"Timeout - Home\">\n                        <Badge count={gameState.timeoutHome} style={{ backgroundColor: '#1890ff', marginBottom: 8 }}>\n                          <Button \n                            type=\"dashed\" \n                            size={settings.compactMode ? 'small' : 'middle'}\n                            onClick={() => handleTimeout('home')}\n                            disabled={gameState.timeoutHome <= 0}\n                            style={{ minWidth: 70, marginBottom: 8 }}\n                          >\n                            HOME\n                          </Button>\n                        </Badge>\n                      </Tooltip>\n                      <Tooltip title=\"Timeout - OPP\">\n                        <Badge count={gameState.timeoutAway} style={{ backgroundColor: '#aaa' }}>\n                          <Button \n                            type=\"dashed\" \n                            size={settings.compactMode ? 'small' : 'middle'}\n                            onClick={() => handleTimeout('away')}\n                            disabled={gameState.timeoutAway <= 0}\n                            style={{ minWidth: 70 }}\n                          >\n                            OPP\n                          </Button>\n                        </Badge>\n                      </Tooltip>\n                    </div>\n                  </Col>\n\n                  {/* Divider */}\n                  <Col flex=\"none\" style={{ display: 'flex', alignItems: 'stretch', height: '100%' }}>\n                    <Divider type=\"vertical\" className={style.scoreboardDivider} style={{ height: '100%', minHeight: 80, margin: '0 12px' }} />\n                  </Col>\n\n                  {/* Right: Export/Settings vertical stack */}\n                  <Col flex=\"none\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', minWidth: 140 }}>\n                    <div className={style.scoreboardRightGrid}>\n                      {/* Row 1 */}\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        icon={<ExportOutlined />} \n                        onClick={() => setShowExportModal(true)}\n                        style={{ width: 110, gridRow: 1, gridColumn: 1 }}\n                      >\n                        Export\n                      </Button>\n                      <Button \n                        type={activeTab === 'tracking' ? 'primary' : 'default'} \n                        onClick={() => setActiveTab('tracking')}\n                        style={{ width: 110, gridRow: 1, gridColumn: 2 }}\n                      >\n                        Live Tracking\n                      </Button>\n                      {/* Row 2 */}\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        icon={<SettingOutlined />} \n                        onClick={() => setShowSettingsModal(true)}\n                        style={{ width: 110, gridRow: 2, gridColumn: 1 }}\n                      >\n                        Settings\n                      </Button>\n                      <Button \n                        type={activeTab === 'analytics' ? 'primary' : 'default'} \n                        onClick={() => setActiveTab('analytics')}\n                        style={{ width: 110, gridRow: 2, gridColumn: 2 }}\n                      >\n                        Analytics\n                      </Button>\n                      {/* Row 3: Halftime Report spans both columns */}\n                      <Button \n                        size={settings.compactMode ? 'small' : 'middle'}\n                        icon={<TrophyOutlined />} \n                        onClick={() => setShowHalftimeReport(true)}\n                        disabled={gameState.quarter < 2 || (gameState.quarter === 2 && gameState.currentTime > 1)}\n                        style={{ \n                          width: 220,\n                          gridRow: 3,\n                          gridColumn: '1 / span 2',\n                          backgroundColor: (gameState.quarter < 2 || (gameState.quarter === 2 && gameState.currentTime > 1)) ? '#666' : '#1890ff',\n                          color: '#fff',\n                          fontWeight: 600,\n                          border: 'none',\n                          borderRadius: 12,\n                          boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                          cursor: (gameState.quarter < 2 || (gameState.quarter === 2 && gameState.currentTime > 1)) ? 'not-allowed' : 'pointer',\n                        }}\n                      >\n                        Halftime Report\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n            </div>\n          </Card>\n        </Col>\n\n        {/* Halftime Report */}\n        {showHalftimeReport && (\n          <Col span={24}>\n            <Card \n              title={\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <span>🏀 HALFTIME REPORT</span>\n                  <Button type=\"primary\" onClick={() => setShowHalftimeReport(false)}>Continue Game</Button>\n                </div>\n              }\n              className={style.halftimeReport}\n            >\n              <Row gutter={[16, 16]}>\n                <Col span={12}>\n                  <Card title=\"📊 Team Performance\" size=\"small\" className={style.insightCard}>\n                    <Row gutter={16}>\n                      {halftimeInsights.map((insight, index) => (\n                        <Col span={12} key={index}>\n                          <Statistic \n                            title={insight.title} \n                            value={insight.value}\n                            valueStyle={{ color: insight.status === 'error' ? '#ff4d4f' : insight.status === 'warning' ? '#faad14' : '#52c41a' }}\n                          />\n                        </Col>\n                      ))}\n                    </Row>\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  <Card title=\"🏆 Player Highlights\" size=\"small\" className={style.insightCard}>\n                    <div style={{ color: 'white' }}>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Top Scorer:</Text> #{halftimeData.topScorer.number} {halftimeData.topScorer.name} ({halftimeData.topScorer.points} pts)\n                      </div>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Top Rebounder:</Text> #{halftimeData.topRebounder.number} {halftimeData.topRebounder.name} ({halftimeData.topRebounder.rebounds} reb)\n                      </div>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Top Assister:</Text> #{halftimeData.topAssister.number} {halftimeData.topAssister.name} ({halftimeData.topAssister.assists} ast)\n                      </div>\n                      <div>\n                        <Text strong>Most Efficient:</Text> #{halftimeData.mostEfficient.player.number} {halftimeData.mostEfficient.player.name} (+{halftimeData.mostEfficient.efficiency})\n                      </div>\n                    </div>\n                  </Card>\n                </Col>\n                <Col span={24}>\n                  <Card title=\"🎯 Game Pace & Projections\" size=\"small\" className={style.insightCard}>\n                    <Row gutter={16}>\n                      <Col span={8}>\n                        <Statistic title=\"Current Pace\" value={`${halftimeData.pace} pts/game`} />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"Projected Final\" value={`${Math.round(halftimeData.pace * 0.4)} pts`} />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"Lead/Deficit\" value={gameState.homeScore - gameState.opponentScore} />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Col>\n                {settings.showRecommendations && (\n                  <Col span={24}>\n                    <Card title=\"💡 Strategic Recommendations\" size=\"small\" className={style.recommendations}>\n                      <ul>\n                        {halftimeData.recommendations.map((rec, index) => (\n                          <li key={index}>{rec}</li>\n                        ))}\n                      </ul>\n                    </Card>\n                  </Col>\n                )}\n              </Row>\n            </Card>\n          </Col>\n        )}\n\n        {/* Timeout Report */}\n        {showTimeoutReport && (\n          <Col span={24}>\n            <Card \n              title={\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <span>⏰ TIMEOUT INSIGHTS</span>\n                  <Button type=\"primary\" onClick={() => setShowTimeoutReport(false)}>Resume Game</Button>\n                </div>\n              }\n              className={style.timeoutReport}\n            >\n              <Row gutter={[16, 16]}>\n                <Col span={12}>\n                  <Card title=\"📈 Recent Momentum\" size=\"small\" className={style.insightCard}>\n                    <div style={{ color: 'white' }}>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Momentum:</Text> \n                        <Badge \n                          count={timeoutData.momentum === 'positive' ? 'POSITIVE' : 'NEGATIVE'} \n                          style={{ \n                            backgroundColor: timeoutData.momentum === 'positive' ? '#52c41a' : '#ff4d4f',\n                            marginLeft: 8\n                          }} \n                        />\n                      </div>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Recent Events:</Text> {timeoutData.recentEvents.length} events\n                      </div>\n                      <div>\n                        <Text strong>Key Player:</Text> #{timeoutData.keyPlayer.number} {timeoutData.keyPlayer.name} (+{timeoutData.keyPlayer.plusMinus})\n                      </div>\n                    </div>\n                  </Card>\n                </Col>\n                {settings.showQuickActions && (\n                  <Col span={12}>\n                    <Card title=\"🎯 Quick Actions\" size=\"small\" className={style.insightCard}>\n                      <div style={{ color: 'white' }}>\n                        {timeoutData.recommendations.map((rec, index) => (\n                          <div key={index} style={{ marginBottom: 4 }}>\n                            • {rec}\n                          </div>\n                        ))}\n                      </div>\n                    </Card>\n                  </Col>\n                )}\n                <Col span={24}>\n                  <Card title=\"📊 Score Update\" size=\"small\" className={style.insightCard}>\n                    <Row gutter={16}>\n                      <Col span={8}>\n                        <Statistic title=\"HOME\" value={gameState.homeScore} />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"OPPONENT\" value={gameState.opponentScore} />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic \n                          title=\"DIFFERENCE\" \n                          value={gameState.homeScore - gameState.opponentScore}\n                          valueStyle={{ color: (gameState.homeScore - gameState.opponentScore) >= 0 ? '#52c41a' : '#ff4d4f' }}\n                        />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  <Card title=\"🏆 Player Highlights\" size=\"small\" className={style.insightCard}>\n                    <div style={{ color: 'white' }}>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Top Scorer:</Text> #{timeoutData.topScorer.number} {timeoutData.topScorer.name} ({timeoutData.topScorer.points} pts)\n                      </div>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Top Rebounder:</Text> #{timeoutData.topRebounder.number} {timeoutData.topRebounder.name} ({timeoutData.topRebounder.rebounds} reb)\n                      </div>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Top Assister:</Text> #{timeoutData.topAssister.number} {timeoutData.topAssister.name} ({timeoutData.topAssister.assists} ast)\n                      </div>\n                      <div>\n                        <Text strong>Most Efficient:</Text> #{timeoutData.mostEfficient.player.number} {timeoutData.mostEfficient.player.name} (+{timeoutData.mostEfficient.efficiency})\n                      </div>\n                    </div>\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  <Card title=\"📊 Team Performance\" size=\"small\" className={style.insightCard}>\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <Statistic title=\"Shooting Efficiency\" value={`${timeoutData.teamStats.fgPercentage}%`} />\n                      </Col>\n                      <Col span={12}>\n                        <Statistic title=\"Rebound Rate\" value={`${timeoutData.teamStats.totalRebounds}`} />\n                      </Col>\n                      <Col span={12}>\n                        <Statistic title=\"A/T Ratio\" value={timeoutData.teamStats.assistToTurnoverRatio.toFixed(2)} />\n                      </Col>\n                      <Col span={12}>\n                        <Statistic title=\"Points (2min)\" value={timeoutData.teamStats.totalPoints} />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  <Card title=\"🔥 Opponent Run & Hot Hand\" size=\"small\" className={style.insightCard}>\n                    <div style={{ color: 'white' }}>\n                      <div style={{ marginBottom: 8 }}>\n                        <Text strong>Opponent Run:</Text> {timeoutData.recentOpponentRun}\n                      </div>\n                      {timeoutData.hotOpponent && (\n                        <div>\n                          <Text strong>Hot Opponent:</Text> {timeoutData.hotOpponent.name} ({timeoutData.hotOpponent.points} pts)\n                        </div>\n                      )}\n                    </div>\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  <Card title=\"🎯 Game Pace & Projections\" size=\"small\" className={style.insightCard}>\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <Statistic title=\"Current Pace\" value={`${timeoutData.pace} pts/game`} />\n                      </Col>\n                      <Col span={12}>\n                        <Statistic title=\"Projected Final\" value={`${timeoutData.projectedFinal} pts`} />\n                      </Col>\n                      <Col span={12}>\n                        <Statistic title=\"Lead/Deficit\" value={timeoutData.lead} />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Col>\n                <Col span={24}>\n                  <Card title=\"💡 Strategic Recommendations\" size=\"small\" className={style.recommendations}>\n                    <ul>\n                      {timeoutData.recommendations.map((rec, index) => (\n                        <li key={index}>{rec}</li>\n                      ))}\n                    </ul>\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        )}\n\n        {/* Main Content Section */}\n        <Col span={24}>\n          {activeTab === 'tracking' && tabItems.find(tab => tab.key === 'tracking')?.children}\n          {activeTab === 'analytics' && tabItems.find(tab => tab.key === 'analytics')?.children}\n          {activeTab === 'lineups' && tabItems.find(tab => tab.key === 'lineups')?.children}\n        </Col>\n      </Row>\n\n      {/* Export Modal */}\n      <Modal\n        title=\"Export Game Data\"\n        open={showExportModal}\n        onCancel={() => setShowExportModal(false)}\n        footer={null}\n      >\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Button icon={<DownloadOutlined />} onClick={() => exportGameData('json')} block>\n            Export as JSON\n          </Button>\n          <Button icon={<DownloadOutlined />} onClick={() => exportGameData('csv')} block>\n            Export as CSV\n          </Button>\n        </Space>\n      </Modal>\n\n      {/* Settings Modal */}\n      <Modal\n        title=\"Game Settings\"\n        open={showSettingsModal}\n        onCancel={() => setShowSettingsModal(false)}\n        width={800}\n        footer={[\n          <Button key=\"reset\" onClick={resetSettings}>\n            Reset to Defaults\n          </Button>,\n          <Button key=\"export\" onClick={exportSettings}>\n            Export Settings\n          </Button>,\n          <Button key=\"cancel\" onClick={() => setShowSettingsModal(false)}>\n            Cancel\n          </Button>,\n          <Button key=\"save\" type=\"primary\" onClick={() => setShowSettingsModal(false)}>\n            Save Settings\n          </Button>\n        ]}\n      >\n        <Tabs defaultActiveKey=\"game\" size=\"small\">\n          <TabPane tab=\"Game Configuration\" key=\"game\">\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Quarter Duration (minutes):</Text>\n                  <Input\n                    type=\"number\"\n                    value={settings.quarterDuration}\n                    onChange={(e) => saveSettings({ quarterDuration: parseInt(e.target.value) || 10 })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Total Quarters:</Text>\n                  <Select\n                    value={settings.totalQuarters}\n                    onChange={(value) => saveSettings({ totalQuarters: value })}\n                    style={{ width: '100%', marginTop: 8 }}\n                  >\n                    <Option value={4}>4 Quarters</Option>\n                    <Option value={2}>2 Halves</Option>\n                    <Option value={6}>6 Quarters (Youth)</Option>\n                  </Select>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Timeouts per Team:</Text>\n                  <Input\n                    type=\"number\"\n                    value={settings.timeoutCount}\n                    onChange={(e) => saveSettings({ timeoutCount: parseInt(e.target.value) || 4 })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Shot Clock (seconds):</Text>\n                  <Input\n                    type=\"number\"\n                    value={settings.shotClock}\n                    onChange={(e) => saveSettings({ shotClock: parseInt(e.target.value) || 30 })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Workflow\" key=\"workflow\">\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Workflow Mode:</Text>\n                  <Select\n                    value={settings.workflowMode}\n                    onChange={(value) => saveSettings({ workflowMode: value })}\n                    style={{ width: '100%', marginTop: 8 }}\n                  >\n                    <Option value=\"player-first\">Player First (Select player, then action)</Option>\n                    <Option value=\"action-first\">Action First (Select action, then player)</Option>\n                  </Select>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Auto-pause on Timeout:</Text>\n                  <Switch\n                    checked={settings.autoPauseOnTimeout}\n                    onChange={(checked) => saveSettings({ autoPauseOnTimeout: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Auto-pause on Quarter End:</Text>\n                  <Switch\n                    checked={settings.autoPauseOnQuarterEnd}\n                    onChange={(checked) => saveSettings({ autoPauseOnQuarterEnd: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Confirmations:</Text>\n                  <Switch\n                    checked={settings.showConfirmations}\n                    onChange={(checked) => saveSettings({ showConfirmations: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Display\" key=\"display\">\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Player Numbers:</Text>\n                  <Switch\n                    checked={settings.showPlayerNumbers}\n                    onChange={(checked) => saveSettings({ showPlayerNumbers: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Positions:</Text>\n                  <Switch\n                    checked={settings.showPositions}\n                    onChange={(checked) => saveSettings({ showPositions: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Efficiency Ratings:</Text>\n                  <Switch\n                    checked={settings.showEfficiencyRatings}\n                    onChange={(checked) => saveSettings({ showEfficiencyRatings: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Compact Mode:</Text>\n                  <Switch\n                    checked={settings.compactMode}\n                    onChange={(checked) => saveSettings({ compactMode: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Export\" key=\"export\">\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Auto Export:</Text>\n                  <Switch\n                    checked={settings.autoExport}\n                    onChange={(checked) => saveSettings({ autoExport: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Export Format:</Text>\n                  <Select\n                    value={settings.exportFormat}\n                    onChange={(value) => saveSettings({ exportFormat: value })}\n                    style={{ width: '100%', marginTop: 8 }}\n                  >\n                    <Option value=\"json\">JSON</Option>\n                    <Option value=\"csv\">CSV</Option>\n                    <Option value=\"pdf\">PDF</Option>\n                  </Select>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Export Interval (minutes):</Text>\n                  <Input\n                    type=\"number\"\n                    value={settings.exportInterval}\n                    onChange={(e) => saveSettings({ exportInterval: parseInt(e.target.value) || 5 })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Include Player Stats:</Text>\n                  <Switch\n                    checked={settings.includePlayerStats}\n                    onChange={(checked) => saveSettings({ includePlayerStats: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Include Team Stats:</Text>\n                  <Switch\n                    checked={settings.includeTeamStats}\n                    onChange={(checked) => saveSettings({ includeTeamStats: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Include Lineup Data:</Text>\n                  <Switch\n                    checked={settings.includeLineupData}\n                    onChange={(checked) => saveSettings({ includeLineupData: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Analytics\" key=\"analytics\">\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Advanced Stats:</Text>\n                  <Switch\n                    checked={settings.showAdvancedStats}\n                    onChange={(checked) => saveSettings({ showAdvancedStats: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Projections:</Text>\n                  <Switch\n                    checked={settings.showProjections}\n                    onChange={(checked) => saveSettings({ showProjections: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Trends:</Text>\n                  <Switch\n                    checked={settings.showTrends}\n                    onChange={(checked) => saveSettings({ showTrends: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Highlight Top Performers:</Text>\n                  <Switch\n                    checked={settings.highlightTopPerformers}\n                    onChange={(checked) => saveSettings({ highlightTopPerformers: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Efficiency Threshold:</Text>\n                  <Input\n                    type=\"number\"\n                    value={settings.efficiencyThreshold}\n                    onChange={(e) => saveSettings({ efficiencyThreshold: parseInt(e.target.value) || 15 })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tab=\"Notifications\" key=\"notifications\">\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Halftime Reminder:</Text>\n                  <Switch\n                    checked={settings.halftimeReminder}\n                    onChange={(checked) => saveSettings({ halftimeReminder: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Timeout Reminder:</Text>\n                  <Switch\n                    checked={settings.timeoutReminder}\n                    onChange={(checked) => saveSettings({ timeoutReminder: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Foul Trouble Alert:</Text>\n                  <Switch\n                    checked={settings.foulTroubleAlert}\n                    onChange={(checked) => saveSettings({ foulTroubleAlert: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Strategic Recommendations:</Text>\n                  <Switch\n                    checked={settings.showRecommendations}\n                    onChange={(checked) => saveSettings({ showRecommendations: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className={style.settingGroup}>\n                  <Text strong>Show Quick Actions:</Text>\n                  <Switch\n                    checked={settings.showQuickActions}\n                    onChange={(checked) => saveSettings({ showQuickActions: checked })}\n                    style={{ marginTop: 8 }}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n        </Tabs>\n      </Modal>\n\n      {/* Lineup Builder Modal */}\n      <Modal\n        title=\"Create New Lineup\"\n        open={showLineupBuilder}\n        onCancel={() => setShowLineupBuilder(false)}\n        footer={[\n          <Button key=\"cancel\" onClick={() => setShowLineupBuilder(false)}>\n            Cancel\n          </Button>,\n          <Button \n            key=\"create\" \n            type=\"primary\" \n            onClick={createLineup}\n            disabled={selectedLineupPlayers.length !== 5}\n          >\n            Create Lineup ({selectedLineupPlayers.length}/5)\n          </Button>\n        ]}\n      >\n        <div>\n          <div style={{ marginBottom: 16 }}>\n            <Text strong>Select 5 Players:</Text>\n            <Input\n              placeholder=\"Lineup name (optional)\"\n              value={lineupName}\n              onChange={(e) => setLineupName(e.target.value)}\n              style={{ marginTop: 8 }}\n            />\n          </div>\n          <div className={style.playerSelection}>\n            {players.map(player => (\n              <div\n                key={player.id}\n                className={`${style.selectablePlayer} ${selectedLineupPlayers.includes(player.id) ? style.selected : ''}`}\n                onClick={() => {\n                  if (selectedLineupPlayers.includes(player.id)) {\n                    setSelectedLineupPlayers(prev => prev.filter(id => id !== player.id))\n                  } else if (selectedLineupPlayers.length < 5) {\n                    setSelectedLineupPlayers(prev => [...prev, player.id])\n                  }\n                }}\n              >\n                <div>\n                  <Text strong>#{player.number} {player.name}</Text>\n                  <br />\n                  <Text type=\"secondary\">{player.position}</Text>\n                </div>\n                <div>\n                  <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                  <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal>\n\n      {/* DEV-ONLY: Quick Substitution Modal */}\n      <Modal\n        title=\"Substitution\"\n        open={showQuickSubModal}\n        onCancel={() => {\n          setShowQuickSubModal(false)\n          setSubstitutionPlayerIn(null)\n          setSubstitutionPlayerOut(null)\n        }}\n        footer={null}\n        width={600}\n        styles={{\n          content: {\n            backgroundColor: '#17375c',\n            color: '#f5f7fa'\n          },\n          header: {\n            backgroundColor: '#17375c',\n            color: '#f5f7fa'\n          },\n          body: {\n            backgroundColor: '#17375c',\n            color: '#f5f7fa'\n          }\n        }}\n      >\n        <div style={{ color: '#f5f7fa' }}>\n          {/* Step 1: Select Player Out */}\n          {!substitutionPlayerOut && (\n            <>\n              <div style={{\n                background: '#1e3a5c',\n                padding: 16,\n                borderRadius: 8,\n                marginBottom: 16,\n                border: '1px solid #334155',\n                textAlign: 'center',\n              }}>\n                <Text strong style={{ color: '#f5f7fa', fontSize: '1rem' }}>\n                  Select Player to Sub OUT\n                </Text>\n              </div>\n              <Select\n                placeholder=\"Select player to sub out\"\n                style={{ width: '100%', marginBottom: 16 }}\n                onChange={(value) => {\n                  const player = players.find(p => p.id === value)\n                  if (player) setSubstitutionPlayerOut(player)\n                }}\n                dropdownStyle={{ backgroundColor: '#1e293b' }}\n              >\n                {getCourtPlayers().map(player => (\n                  <Option key={player.id} value={player.id}>\n                    #{player.number} {player.name} ({player.position})\n                  </Option>\n                ))}\n              </Select>\n            </>\n          )}\n          {/* Step 2: Select Player In */}\n          {substitutionPlayerOut && !substitutionPlayerIn && (\n            <>\n              <div style={{\n                background: '#1e3a5c',\n                padding: 16,\n                borderRadius: 8,\n                marginBottom: 16,\n                border: '1px solid #334155',\n                textAlign: 'center',\n              }}>\n                <Text strong style={{ color: '#f5f7fa', fontSize: '1rem' }}>\n                  Subbing Out: #{substitutionPlayerOut.number} {substitutionPlayerOut.name}\n                </Text>\n              </div>\n              <Text strong style={{ color: '#f5f7fa', marginBottom: 8, display: 'block', fontSize: '1rem' }}>\n                Player In:\n              </Text>\n              <Select\n                ref={playerInSelectRef}\n                placeholder=\"Select player to sub in\"\n                style={{ width: '100%', marginBottom: 16 }}\n                onChange={(value) => {\n                  const player = players.find(p => p.id === value)\n                  if (player && substitutionPlayerOut) {\n                    setSubstitutionPlayerIn(player)\n                    // handleQuickSubstitution will be called in the next effect\n                  }\n                }}\n                dropdownStyle={{ backgroundColor: '#1e293b' }}\n              >\n                {getAvailablePlayers().map(player => (\n                  <Option key={player.id} value={player.id}>\n                    #{player.number} {player.name} ({player.position})\n                  </Option>\n                ))}\n              </Select>\n            </>\n          )}\n          {/* Step 3: Perform Substitution and Close Modal */}\n          {substitutionPlayerOut && substitutionPlayerIn && (\n            <>{/* This effect will run after both are set */}</>\n          )}\n        </div>\n      </Modal>\n\n      {/* DEV-ONLY: Enhanced Substitution Modal */}\n      <Modal\n        title={\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <span>🔄 SUBSTITUTION</span>\n            <Badge count={substitutionHistory.length} style={{ backgroundColor: '#1890ff' }} />\n          </div>\n        }\n        open={showSubstitutionModal}\n        onCancel={resetSubstitutionModal}\n        footer={[\n          <Button key=\"cancel\" onClick={resetSubstitutionModal}>\n            Cancel\n          </Button>,\n          <Button \n            key=\"confirm\" \n            type=\"primary\" \n            onClick={confirmSubstitution}\n            disabled={!substitutionPlayerOut || !substitutionPlayerIn}\n          >\n            Confirm Substitution\n          </Button>\n        ]}\n        width={700}\n        styles={{\n          content: {\n            backgroundColor: '#17375c',\n            color: '#f5f7fa'\n          },\n          header: {\n            backgroundColor: '#17375c',\n            color: '#f5f7fa'\n          },\n          body: {\n            backgroundColor: '#17375c',\n            color: '#f5f7fa'\n          }\n        }}\n      >\n        <div style={{ color: '#f5f7fa' }}>\n          {/* Step 1: Select Player Out */}\n          {substitutionStep === 'select-out' && (\n            <>\n              <div style={{\n                background: '#1e3a5c',\n                padding: 16,\n                borderRadius: 8,\n                marginBottom: 16,\n                border: '1px solid #334155',\n                textAlign: 'center',\n              }}>\n                <Text strong style={{ color: '#f5f7fa', fontSize: '1.1rem' }}>\n                  Select Player to Sub OUT\n                </Text>\n                <br />\n                <Text type=\"secondary\" style={{ color: '#94a3b8', fontSize: '0.9rem' }}>\n                  Choose a player currently on the court\n                </Text>\n              </div>\n              <Row gutter={[16, 16]}>\n                {getCourtPlayers().map(player => (\n                  <Col span={12} key={player.id}>\n                    <div\n                      className={`${style.selectablePlayer} ${substitutionPlayerOut?.id === player.id ? style.selected : ''}`}\n                      onClick={() => {\n                        setSubstitutionPlayerOut(player)\n                        setSubstitutionStep('select-in')\n                      }}\n                      style={{\n                        padding: 12,\n                        border: '1px solid #334155',\n                        borderRadius: 8,\n                        cursor: 'pointer',\n                        background: substitutionPlayerOut?.id === player.id ? '#2563eb' : '#1e3a5c',\n                        transition: 'all 0.2s'\n                      }}\n                    >\n                      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <div>\n                          <Text strong style={{ color: '#f5f7fa', fontSize: '1rem' }}>\n                            #{player.number} {player.name}\n                          </Text>\n                          <br />\n                          <Text style={{ color: '#94a3b8', fontSize: '0.8rem' }}>\n                            {player.position} • {player.points}PTS • {player.plusMinus}+/-\n                          </Text>\n                        </div>\n                        <div style={{ textAlign: 'right' }}>\n                          <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                          <br />\n                          <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n            </>\n          )}\n\n          {/* Step 2: Select Player In */}\n          {substitutionStep === 'select-in' && substitutionPlayerOut && (\n            <>\n              <div style={{\n                background: '#1e3a5c',\n                padding: 16,\n                borderRadius: 8,\n                marginBottom: 16,\n                border: '1px solid #334155',\n                textAlign: 'center',\n              }}>\n                <Text strong style={{ color: '#f5f7fa', fontSize: '1.1rem' }}>\n                  Subbing Out: #{substitutionPlayerOut.number} {substitutionPlayerOut.name}\n                </Text>\n                <br />\n                <Text type=\"secondary\" style={{ color: '#94a3b8', fontSize: '0.9rem' }}>\n                  Select player to sub IN\n                </Text>\n              </div>\n              <Row gutter={[16, 16]}>\n                {getAvailablePlayers().map(player => (\n                  <Col span={12} key={player.id}>\n                    <div\n                      className={`${style.selectablePlayer} ${substitutionPlayerIn?.id === player.id ? style.selected : ''}`}\n                      onClick={() => {\n                        setSubstitutionPlayerIn(player)\n                        setSubstitutionStep('confirm')\n                      }}\n                      style={{\n                        padding: 12,\n                        border: '1px solid #334155',\n                        borderRadius: 8,\n                        cursor: 'pointer',\n                        background: substitutionPlayerIn?.id === player.id ? '#2563eb' : '#1e3a5c',\n                        transition: 'all 0.2s'\n                      }}\n                    >\n                      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <div>\n                          <Text strong style={{ color: '#f5f7fa', fontSize: '1rem' }}>\n                            #{player.number} {player.name}\n                          </Text>\n                          <br />\n                          <Text style={{ color: '#94a3b8', fontSize: '0.8rem' }}>\n                            {player.position} • {player.points}PTS • {player.plusMinus}+/-\n                          </Text>\n                        </div>\n                        <div style={{ textAlign: 'right' }}>\n                          <Badge count={player.points} style={{ backgroundColor: '#52c41a' }} />\n                          <br />\n                          <Badge count={player.plusMinus} style={{ backgroundColor: player.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                        </div>\n                      </div>\n                    </div>\n                  </Col>\n                ))}\n              </Row>\n            </>\n          )}\n\n          {/* Step 3: Confirm Substitution */}\n          {substitutionStep === 'confirm' && substitutionPlayerOut && substitutionPlayerIn && (\n            <>\n              <div style={{\n                background: '#1e3a5c',\n                padding: 16,\n                borderRadius: 8,\n                marginBottom: 16,\n                border: '1px solid #334155',\n                textAlign: 'center',\n              }}>\n                <Text strong style={{ color: '#f5f7fa', fontSize: '1.2rem' }}>\n                  Confirm Substitution\n                </Text>\n              </div>\n              <Row gutter={[16, 16]}>\n                <Col span={12}>\n                  <Card \n                    title=\"Player Out\" \n                    size=\"small\"\n                    style={{ backgroundColor: '#1e3a5c', borderColor: '#334155' }}\n                  >\n                    <div style={{ textAlign: 'center' }}>\n                      <Text strong style={{ color: '#f5222d', fontSize: '1.1rem' }}>\n                        #{substitutionPlayerOut.number} {substitutionPlayerOut.name}\n                      </Text>\n                      <br />\n                      <Text style={{ color: '#94a3b8', fontSize: '0.9rem' }}>\n                        {substitutionPlayerOut.position}\n                      </Text>\n                      <br />\n                      <Badge count={substitutionPlayerOut.points} style={{ backgroundColor: '#52c41a', marginRight: 8 }} />\n                      <Badge count={substitutionPlayerOut.plusMinus} style={{ backgroundColor: substitutionPlayerOut.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                    </div>\n                  </Card>\n                </Col>\n                <Col span={12}>\n                  <Card \n                    title=\"Player In\" \n                    size=\"small\"\n                    style={{ backgroundColor: '#1e3a5c', borderColor: '#334155' }}\n                  >\n                    <div style={{ textAlign: 'center' }}>\n                      <Text strong style={{ color: '#52c41a', fontSize: '1.1rem' }}>\n                        #{substitutionPlayerIn.number} {substitutionPlayerIn.name}\n                      </Text>\n                      <br />\n                      <Text style={{ color: '#94a3b8', fontSize: '0.9rem' }}>\n                        {substitutionPlayerIn.position}\n                      </Text>\n                      <br />\n                      <Badge count={substitutionPlayerIn.points} style={{ backgroundColor: '#52c41a', marginRight: 8 }} />\n                      <Badge count={substitutionPlayerIn.plusMinus} style={{ backgroundColor: substitutionPlayerIn.plusMinus >= 0 ? '#52c41a' : '#f5222d' }} />\n                    </div>\n                  </Card>\n                </Col>\n              </Row>\n              <div style={{ marginTop: 16, textAlign: 'center' }}>\n                <Text type=\"secondary\" style={{ color: '#94a3b8', fontSize: '0.9rem' }}>\n                  This will create a new lineup and track the substitution in analytics\n                </Text>\n              </div>\n            </>\n          )}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Statistics "],"names":[],"mappings":"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","debugId":null}}]
}