{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/src/mocks/handlers.ts"],"sourcesContent":["// DEV-ONLY: MSW handlers for API mocking. Expand as needed for more endpoints.\r\nimport { http, HttpResponse } from 'msw'\r\n\r\nexport const handlers = [\r\n  // Mock profile/me endpoint\r\n  http.get('/api/me', () => {\r\n    return HttpResponse.json({\r\n      id: 1,\r\n      firstName: 'Dev',\r\n      lastName: 'User',\r\n      email: 'dev@example.com',\r\n      role: 'COACH',\r\n    })\r\n  }),\r\n  // Mock event types\r\n  http.get('/api/eventTypes', () => {\r\n    return HttpResponse.json({\r\n      data: [\r\n        { id: 1, name: 'Practice', color: '#2196f3', txtColor: '#fff' },\r\n        { id: 2, name: 'Game', color: '#f44336', txtColor: '#fff' },\r\n        { id: 3, name: 'Meeting', color: '#4caf50', txtColor: '#fff' },\r\n      ],\r\n    })\r\n  }),\r\n  // Mock events\r\n  http.get('/api/events', () => {\r\n    return HttpResponse.json({\r\n      data: [\r\n        { id: 1, name: 'Practice 1', startTime: '2024-07-10T10:00:00Z', endTime: '2024-07-10T12:00:00Z', eventType: { id: 1, name: 'Practice', color: '#2196f3', txtColor: '#fff' }, location: 'HOME', venue: 'Main Field' },\r\n        { id: 2, name: 'Game 1', startTime: '2024-07-12T15:00:00Z', endTime: '2024-07-12T17:00:00Z', eventType: { id: 2, name: 'Game', color: '#f44336', txtColor: '#fff' }, location: 'AWAY', venue: 'Stadium' },\r\n      ],\r\n      meta: { total: 2, page: 1, perPage: 20 },\r\n    })\r\n  }),\r\n  // Mock profile\r\n  http.get('/api/profile', () => {\r\n    return HttpResponse.json({\r\n      id: 1,\r\n      firstName: 'Dev',\r\n      lastName: 'User',\r\n      email: 'dev@example.com',\r\n      role: 'COACH',\r\n    })\r\n  }),\r\n  // Mock players\r\n  http.get('/api/players', () => {\r\n    return HttpResponse.json({\r\n      data: [\r\n        { id: 1, name: 'Player One', position: { id: 1, name: 'Forward' }, jersey: '10', weight: 75, height: 180 },\r\n        { id: 2, name: 'Player Two', position: { id: 2, name: 'Goalkeeper' }, jersey: '1', weight: 80, height: 185 },\r\n      ],\r\n      meta: { total: 2, page: 1, perPage: 20 },\r\n    })\r\n  }),\r\n  // Mock tasks\r\n  http.get('/api/tasks', () => {\r\n    return HttpResponse.json({\r\n      data: [\r\n        { id: 1, name: 'Task 1', dueDate: '2024-07-15', priority: { id: 1, weight: 1 }, status: 'TODO' },\r\n        { id: 2, name: 'Task 2', dueDate: '2024-07-20', priority: { id: 2, weight: 2 }, status: 'IN_PROGRESS' },\r\n      ],\r\n      meta: { total: 2, page: 1, perPage: 20 },\r\n    })\r\n  }),\r\n  // Mock login\r\n  http.post('/api/login', () => {\r\n    return HttpResponse.json({ token: 'dev-token' })\r\n  }),\r\n  // Add more handlers as needed for your app\r\n] "],"names":[],"mappings":"AAAA,+EAA+E;;;;AAC/E;AAAA;;AAEO,MAAM,WAAW;IACtB,2BAA2B;IAC3B,8IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,WAAW;QAClB,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,IAAI;YACJ,WAAW;YACX,UAAU;YACV,OAAO;YACP,MAAM;QACR;IACF;IACA,mBAAmB;IACnB,8IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,mBAAmB;QAC1B,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM;gBACJ;oBAAE,IAAI;oBAAG,MAAM;oBAAY,OAAO;oBAAW,UAAU;gBAAO;gBAC9D;oBAAE,IAAI;oBAAG,MAAM;oBAAQ,OAAO;oBAAW,UAAU;gBAAO;gBAC1D;oBAAE,IAAI;oBAAG,MAAM;oBAAW,OAAO;oBAAW,UAAU;gBAAO;aAC9D;QACH;IACF;IACA,cAAc;IACd,8IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,eAAe;QACtB,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM;gBACJ;oBAAE,IAAI;oBAAG,MAAM;oBAAc,WAAW;oBAAwB,SAAS;oBAAwB,WAAW;wBAAE,IAAI;wBAAG,MAAM;wBAAY,OAAO;wBAAW,UAAU;oBAAO;oBAAG,UAAU;oBAAQ,OAAO;gBAAa;gBACnN;oBAAE,IAAI;oBAAG,MAAM;oBAAU,WAAW;oBAAwB,SAAS;oBAAwB,WAAW;wBAAE,IAAI;wBAAG,MAAM;wBAAQ,OAAO;wBAAW,UAAU;oBAAO;oBAAG,UAAU;oBAAQ,OAAO;gBAAU;aACzM;YACD,MAAM;gBAAE,OAAO;gBAAG,MAAM;gBAAG,SAAS;YAAG;QACzC;IACF;IACA,eAAe;IACf,8IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,gBAAgB;QACvB,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,IAAI;YACJ,WAAW;YACX,UAAU;YACV,OAAO;YACP,MAAM;QACR;IACF;IACA,eAAe;IACf,8IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,gBAAgB;QACvB,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM;gBACJ;oBAAE,IAAI;oBAAG,MAAM;oBAAc,UAAU;wBAAE,IAAI;wBAAG,MAAM;oBAAU;oBAAG,QAAQ;oBAAM,QAAQ;oBAAI,QAAQ;gBAAI;gBACzG;oBAAE,IAAI;oBAAG,MAAM;oBAAc,UAAU;wBAAE,IAAI;wBAAG,MAAM;oBAAa;oBAAG,QAAQ;oBAAK,QAAQ;oBAAI,QAAQ;gBAAI;aAC5G;YACD,MAAM;gBAAE,OAAO;gBAAG,MAAM;gBAAG,SAAS;YAAG;QACzC;IACF;IACA,aAAa;IACb,8IAAA,CAAA,OAAI,CAAC,GAAG,CAAC,cAAc;QACrB,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,MAAM;gBACJ;oBAAE,IAAI;oBAAG,MAAM;oBAAU,SAAS;oBAAc,UAAU;wBAAE,IAAI;wBAAG,QAAQ;oBAAE;oBAAG,QAAQ;gBAAO;gBAC/F;oBAAE,IAAI;oBAAG,MAAM;oBAAU,SAAS;oBAAc,UAAU;wBAAE,IAAI;wBAAG,QAAQ;oBAAE;oBAAG,QAAQ;gBAAc;aACvG;YACD,MAAM;gBAAE,OAAO;gBAAG,MAAM;gBAAG,SAAS;YAAG;QACzC;IACF;IACA,aAAa;IACb,8IAAA,CAAA,OAAI,CAAC,IAAI,CAAC,cAAc;QACtB,OAAO,sJAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAY;IAChD;CAED","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/src/mocks/browser.ts"],"sourcesContent":["// DEV-ONLY: MSW browser setup for API mocking.\r\nimport { setupWorker } from 'msw/browser'\r\nimport { handlers } from './handlers'\r\n\r\nexport const worker = setupWorker(...handlers) "],"names":[],"mappings":"AAAA,+CAA+C;;;;AAC/C;AACA;;;AAEO,MAAM,SAAS,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,KAAK,2HAAA,CAAA,WAAQ","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/src/mocks/index.ts"],"sourcesContent":["// DEV-ONLY: MSW entry point to start the worker in development mode.\r\nimport { worker } from './browser'\r\n\r\nif (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {\r\n  worker.start({\r\n    onUnhandledRequest: 'bypass', // Don't warn about unhandled requests\r\n  }).catch(console.error)\r\n} "],"names":[],"mappings":"AAAA,qEAAqE;;AAGhC;AAFrC;;AAEA,wCAA6E;IAC3E,0HAAA,CAAA,SAAM,CAAC,KAAK,CAAC;QACX,oBAAoB;IACtB,GAAG,KAAK,CAAC,QAAQ,KAAK;AACxB","debugId":null}}]
}