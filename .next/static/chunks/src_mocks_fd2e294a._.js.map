{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/src/mocks/handlers.ts"],"sourcesContent":["// DEV-ONLY: MSW handlers for API mocking. Expand as needed for more endpoints.\nimport { http, HttpResponse } from 'msw'\n\nexport const handlers = [\n  // Mock profile/me endpoint\n  http.get('/api/me', () => {\n    return HttpResponse.json({\n      id: 1,\n      firstName: 'Dev',\n      lastName: 'User',\n      email: 'dev@example.com',\n      role: 'COACH',\n    })\n  }),\n  // Mock event types\n  http.get('/api/eventTypes', () => {\n    return HttpResponse.json({\n      data: [\n        { id: 1, name: 'Practice', color: '#2196f3', txtColor: '#fff' },\n        { id: 2, name: 'Game', color: '#4ecdc4', txtColor: '#fff' },\n        { id: 3, name: 'Meeting', color: '#4caf50', txtColor: '#fff' },\n      ],\n    })\n  }),\n  // Mock events\n  http.get('/api/events', () => {\n    return HttpResponse.json({\n      data: [\n        { \n          id: 1, \n          name: 'Eagles vs Hawks', \n          startTime: '2025-03-15T19:00:00Z', \n          endTime: '2025-03-15T21:00:00Z', \n          eventType: { id: 2, name: 'Game', color: '#4ecdc4', txtColor: '#fff' }, \n          location: 'HOME', \n          venue: 'Home Court',\n          isRepeat: false\n        },\n        { \n          id: 2, \n          name: 'Practice Session', \n          startTime: '2025-03-12T16:00:00Z', \n          endTime: '2025-03-12T18:00:00Z', \n          eventType: { id: 1, name: 'Practice', color: '#2196f3', txtColor: '#fff' }, \n          location: 'HOME', \n          venue: 'Training Ground',\n          isRepeat: false\n        },\n      ],\n      meta: { total: 2, page: 1, perPage: 20 },\n    })\n  }),\n  // Mock event players\n  http.get('/api/events/:id/players', () => {\n    return HttpResponse.json({\n      data: [\n        { id: 1, name: 'Player One', position: { id: 1, name: 'Forward' } },\n        { id: 2, name: 'Player Two', position: { id: 2, name: 'Goalkeeper' } },\n        { id: 3, name: 'Player Three', position: { id: 3, name: 'Defender' } },\n      ]\n    })\n  }),\n  // Mock profile\n  http.get('/api/profile', () => {\n    return HttpResponse.json({\n      id: 1,\n      firstName: 'Dev',\n      lastName: 'User',\n      email: 'dev@example.com',\n      role: 'COACH',\n    })\n  }),\n  // Mock players\n  http.get('/api/players', () => {\n    return HttpResponse.json({\n      data: [\n        { id: 1, name: 'Player One', position: { id: 1, name: 'Forward' }, jersey: '10', height: 180 },\n        { id: 2, name: 'Player Two', position: { id: 2, name: 'Goalkeeper' }, jersey: '1', height: 185 },\n        { id: 3, name: 'Player Three', position: { id: 3, name: 'Defender' }, jersey: '5', height: 178 },\n      ],\n      meta: { total: 3, page: 1, perPage: 20 },\n    })\n  }),\n  // Mock positions\n  http.get('/api/positions', () => {\n    return HttpResponse.json({\n      data: [\n        { id: 1, name: 'Forward' },\n        { id: 2, name: 'Goalkeeper' },\n        { id: 3, name: 'Defender' },\n        { id: 4, name: 'Midfielder' }\n      ]\n    })\n  }),\n  // Mock tasks with eventId support\n  http.get('/api/tasks', ({ request }) => {\n    const url = new URL(request.url)\n    const eventId = url.searchParams.get('eventId')\n    const status = url.searchParams.get('status')\n    const priorityId = url.searchParams.get('priorityId')\n    \n    // Mock tasks for game event (eventId = 1)\n    const gameTasks = [\n      { \n        id: 1, \n        name: 'Set up equipment', \n        description: 'Prepare court and equipment for the game',\n        dueDate: '2025-03-15', \n        priority: { id: 1, name: 'High', weight: 1 }, \n        status: 'TODO',\n        eventId: 1,\n        event: { id: 1, name: 'Eagles vs Hawks', venue: 'Home Court' },\n        playerTasks: [\n          { player: { id: 1, name: 'Player One' } }\n        ]\n      },\n      { \n        id: 2, \n        name: 'Team warm-up', \n        description: 'Complete pre-game warm-up routine',\n        dueDate: '2025-03-15', \n        priority: { id: 2, name: 'Medium', weight: 2 }, \n        status: 'IN_PROGRESS',\n        eventId: 1,\n        event: { id: 1, name: 'Eagles vs Hawks', venue: 'Home Court' },\n        playerTasks: [\n          { player: { id: 1, name: 'Player One' } },\n          { player: { id: 2, name: 'Player Two' } }\n        ]\n      },\n      { \n        id: 3, \n        name: 'Review game plan', \n        description: 'Final review of strategies and plays',\n        dueDate: '2025-03-15', \n        priority: { id: 1, name: 'High', weight: 1 }, \n        status: 'DONE',\n        eventId: 1,\n        event: { id: 1, name: 'Eagles vs Hawks', venue: 'Home Court' },\n        playerTasks: []\n      },\n      { \n        id: 4, \n        name: 'Check uniforms', \n        description: 'Ensure all players have proper uniforms',\n        dueDate: '2025-03-15', \n        priority: { id: 2, name: 'Medium', weight: 2 }, \n        status: 'TODO',\n        eventId: 1,\n        event: { id: 1, name: 'Eagles vs Hawks', venue: 'Home Court' },\n        playerTasks: [\n          { player: { id: 3, name: 'Player Three' } }\n        ]\n      }\n    ]\n    \n    // General tasks not tied to events\n    const generalTasks = [\n      { \n        id: 5, \n        name: 'Update player stats', \n        description: 'Update season statistics',\n        dueDate: '2025-03-20', \n        priority: { id: 3, name: 'Low', weight: 3 }, \n        status: 'TODO',\n        eventId: null,\n        event: null,\n        playerTasks: []\n      }\n    ]\n    \n    let tasks = [...gameTasks, ...generalTasks]\n    \n    // Filter by eventId if provided\n    if (eventId) {\n      tasks = tasks.filter(task => task.eventId === parseInt(eventId))\n    }\n    \n    // Filter by status if provided\n    if (status) {\n      tasks = tasks.filter(task => task.status === status)\n    }\n    \n    // Filter by priorityId if provided\n    if (priorityId) {\n      tasks = tasks.filter(task => task.priority.id === parseInt(priorityId))\n    }\n    \n    return HttpResponse.json({\n      data: tasks,\n      meta: { total: tasks.length, page: 1, perPage: 20 },\n    })\n  }),\n  // Mock priorities\n  http.get('/api/priorities', () => {\n    return HttpResponse.json({\n      data: [\n        { id: 1, name: 'High', weight: 1 },\n        { id: 2, name: 'Medium', weight: 2 },\n        { id: 3, name: 'Low', weight: 3 },\n      ]\n    })\n  }),\n  // Mock login\n  http.post('/api/login', () => {\n    return HttpResponse.json({ token: 'dev-token' })\n  }),\n  // Add more handlers as needed for your app\n];"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Andrew%20Farrell/Desktop/Big%20Test/big-test/src/mocks/browser.ts"],"sourcesContent":["// DEV-ONLY: MSW browser setup for API mocking.\r\nimport { setupWorker } from 'msw/browser'\r\nimport { handlers } from './handlers'\r\n\r\nexport const worker = setupWorker(...handlers) "],"names":[],"mappings":"AAAA,+CAA+C;;;;AAC/C;AACA;;;AAEO,MAAM,SAAS,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,KAAK,2HAAA,CAAA,WAAQ","debugId":null}}]
}